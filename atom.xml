<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>HEXH&#39;s Blog</title>
  <subtitle>面朝大海，春暖花开</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://dangxia.github.io/"/>
  <updated>2016-04-15T16:55:36.150Z</updated>
  <id>http://dangxia.github.io/</id>
  
  <author>
    <name>Xuehui He</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>chrome-redirector</title>
    <link href="http://dangxia.github.io/2016/04/15/chrome/2016-04-15-chrome-redirector/"/>
    <id>http://dangxia.github.io/2016/04/15/chrome/2016-04-15-chrome-redirector/</id>
    <published>2016-04-15T15:34:00.000Z</published>
    <updated>2016-04-15T16:55:36.150Z</updated>
    
    <content type="html">&lt;h3&gt;起因&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;https://github-atom-io-herokuapp-com.global.ssl.fastly.net/assets/application-ba07c5c2889a34307a4b7d49410451d9.css&lt;/code&gt;&lt;br&gt;
不能使用&lt;code&gt;https&lt;/code&gt;访问，使用&lt;a href=&quot;https://github.com/chrome-redirector/chrome-redirector&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;chrome-redirector&lt;/a&gt;(商店已经下架，以防万一，已经备份了一个到百度云盘)重定向到&lt;code&gt;http&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight vim&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Refused &lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt; load the script &lt;span class=&quot;string&quot;&gt;&#39;http://github-atom-io-herokuapp-com.global.ssl.fastly.net/assets/application-3db62b578ebfc39ee871abc91b175302.js&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;because it violates the following Content Security Policy directive: &lt;span class=&quot;comment&quot;&gt;&quot;script-src &#39;self&#39; &#39;unsafe-inline&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;http&lt;span class=&quot;variable&quot;&gt;s:&lt;/span&gt;//ssl.google-analytics.&lt;span class=&quot;keyword&quot;&gt;com&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;http&lt;span class=&quot;variable&quot;&gt;s:&lt;/span&gt;//www.google-analytics.&lt;span class=&quot;keyword&quot;&gt;com&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;http&lt;span class=&quot;variable&quot;&gt;s:&lt;/span&gt;//platform.twitter.&lt;span class=&quot;keyword&quot;&gt;com&lt;/span&gt; http&lt;span class=&quot;variable&quot;&gt;s:&lt;/span&gt;//github-atom-io-herokuapp-&lt;span class=&quot;keyword&quot;&gt;com&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;global&lt;/span&gt;.ssl.fastly.net&lt;span class=&quot;comment&quot;&gt;&quot;.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;由于&lt;a href=&quot;http://content-security-policy.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CSP&lt;/a&gt;,chrome报错，进而又安装了plugin:&lt;a href=&quot;https://chrome.google.com/webstore/detail/disable-content-security/ieelmcmcagommplceebfedjlakkhpden/related&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Disable Content-Security-Policy&lt;/a&gt;,&lt;a href=&quot;http://magento.stackexchange.com/questions/74121/how-to-stop-redirect-loading-of-insecure-scripts&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;正确的web解决方法&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;可是仍然报错:&lt;/p&gt;
&lt;figure class=&quot;highlight mipsasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Mixed Content: The page &lt;span class=&quot;built_in&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;https://atom.io/&#39;&lt;/span&gt; was loaded over HTTPS,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;but &lt;/span&gt;requested an &lt;span class=&quot;keyword&quot;&gt;insecure &lt;/span&gt;stylesheet&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&#39;http://github-atom-io-herokuapp-com.global.ssl.fastly.net/assets/application-ba07c5c2889a34307a4b7d49410451d9.css&#39;&lt;/span&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;This request has &lt;span class=&quot;keyword&quot;&gt;been &lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;blocked; &lt;/span&gt;the content must &lt;span class=&quot;keyword&quot;&gt;be &lt;/span&gt;served over HTTPS.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;chrome URL的最右边，容许加载不安全的脚本。以下参照&lt;a href=&quot;http://wiki.sln.suny.edu/display/SLNKB/Enabling+mixed+content+in+Google+Chrome&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Enabling mixed content in Google Chrome&lt;/a&gt;,&lt;a href=&quot;http://superuser.com/questions/487748/how-to-allow-chrome-browser-to-load-insecure-content&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;How to allow Chrome (browser) to load insecure content?&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Click the alert shield icon in the address bar.&lt;/li&gt;
&lt;li&gt;In the icon dialog box, click Load anyway.&lt;/li&gt;
&lt;li&gt;The site will reload; if within ANGEL, users will be returned to the course homepage.&lt;/li&gt;
&lt;li&gt;Upon returning to the page or link in question, the content will now be visible.&lt;/li&gt;
&lt;li&gt;补充一下，浏览器重启后失效&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;rules&lt;/h3&gt;
</content>
    
    <summary type="html">
    
      &lt;h3&gt;起因&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;https://github-atom-io-herokuapp-com.global.ssl.fastly.net/assets/application-ba07c5c2889a34307a4b7d49410451d9.css&lt;/code&gt;&lt;br&gt;
不能使用&lt;code&gt;https&lt;/code&gt;访问，使用&lt;a href=&quot;https://github.com/chrome-redirector/chrome-redirector&quot;&gt;chrome-redirector&lt;/a&gt;(商店已经下架，以防万一，已经备份了一个到百度云盘)重定向到&lt;code&gt;http&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight vim&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Refused &lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt; load the script &lt;span class=&quot;string&quot;&gt;&#39;http://github-atom-io-herokuapp-com.global.ssl.fastly.net/assets/application-3db62b578ebfc39ee871abc91b175302.js&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;because it violates the following Content Security Policy directive: &lt;span class=&quot;comment&quot;&gt;&quot;script-src &#39;self&#39; &#39;unsafe-inline&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;http&lt;span class=&quot;variable&quot;&gt;s:&lt;/span&gt;//ssl.google-analytics.&lt;span class=&quot;keyword&quot;&gt;com&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;http&lt;span class=&quot;variable&quot;&gt;s:&lt;/span&gt;//www.google-analytics.&lt;span class=&quot;keyword&quot;&gt;com&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;http&lt;span class=&quot;variable&quot;&gt;s:&lt;/span&gt;//platform.twitter.&lt;span class=&quot;keyword&quot;&gt;com&lt;/span&gt; http&lt;span class=&quot;variable&quot;&gt;s:&lt;/span&gt;//github-atom-io-herokuapp-&lt;span class=&quot;keyword&quot;&gt;com&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;global&lt;/span&gt;.ssl.fastly.net&lt;span class=&quot;comment&quot;&gt;&quot;.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="chrome" scheme="http://dangxia.github.io/categories/chrome/"/>
    
    
  </entry>
  
  <entry>
    <title>atom-basic</title>
    <link href="http://dangxia.github.io/2016/04/15/atom/2016-04-15-atom-basic/"/>
    <id>http://dangxia.github.io/2016/04/15/atom/2016-04-15-atom-basic/</id>
    <published>2016-04-15T08:48:00.000Z</published>
    <updated>2016-04-15T14:31:23.983Z</updated>
    
    <content type="html">&lt;p&gt;使用atom编辑markdown,大概了解一下怎么使用,参考&lt;a href=&quot;http://wiki.jikexueyuan.com/project/atom/split-screen-operation.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Atom 使用教程&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;常用快捷键&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;快捷键&lt;/th&gt;
&lt;th&gt;效果&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;cmd + comma&lt;/td&gt;
&lt;td&gt;open preferences&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cmd + shift + p&lt;/td&gt;
&lt;td&gt;toggle command palette&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cmd + \&lt;/td&gt;
&lt;td&gt;toggle tree view&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cmd + shift + k&lt;/td&gt;
&lt;td&gt;delete whole line(eclipse:cmd + d,&lt;strong&gt;和markdown-writer热键冲突&lt;/strong&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cmd + shift + d&lt;/td&gt;
&lt;td&gt;duplicate whole line&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3&gt;markdown-writer keybindings&lt;/h3&gt;
&lt;figure class=&quot;highlight scss&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&quot;&lt;span class=&quot;selector-class&quot;&gt;.platform-linux&lt;/span&gt; atom-text-editor:not(&lt;span class=&quot;selector-attr&quot;&gt;[mini]&lt;/span&gt;)&quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;shift-ctrl-K&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;markdown-writer:insert-link&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;shift-ctrl-I&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;markdown-writer:insert-image&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;ctrl-i&quot;&lt;/span&gt;:       &lt;span class=&quot;string&quot;&gt;&quot;markdown-writer:toggle-italic-text&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;ctrl-b&quot;&lt;/span&gt;:       &lt;span class=&quot;string&quot;&gt;&quot;markdown-writer:toggle-bold-text&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;ctrl-&#39;&quot;&lt;/span&gt;:       &lt;span class=&quot;string&quot;&gt;&quot;markdown-writer:toggle-code-text&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;ctrl-h&quot;&lt;/span&gt;:       &lt;span class=&quot;string&quot;&gt;&quot;markdown-writer:toggle-strikethrough-text&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;ctrl-1&quot;&lt;/span&gt;:       &lt;span class=&quot;string&quot;&gt;&quot;markdown-writer:toggle-h1&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;ctrl-2&quot;&lt;/span&gt;:       &lt;span class=&quot;string&quot;&gt;&quot;markdown-writer:toggle-h2&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;ctrl-3&quot;&lt;/span&gt;:       &lt;span class=&quot;string&quot;&gt;&quot;markdown-writer:toggle-h3&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;ctrl-4&quot;&lt;/span&gt;:       &lt;span class=&quot;string&quot;&gt;&quot;markdown-writer:toggle-h4&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;ctrl-5&quot;&lt;/span&gt;:       &lt;span class=&quot;string&quot;&gt;&quot;markdown-writer:toggle-h5&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3&gt;notice&lt;/h3&gt;
&lt;p&gt;atom 不支持&lt;code&gt;零宽度正回顾后发断言&lt;/code&gt;,同样&lt;a href=&quot;https://www.kate-editor.org/doc/kate-part-find-replace.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;kate也不支持&lt;/a&gt;.&lt;br&gt;
&lt;code&gt;esc&lt;/code&gt; 可以关闭,finder,markdown-link-insert等窗口&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;使用atom编辑markdown,大概了解一下怎么使用,参考&lt;a href=&quot;http://wiki.jikexueyuan.com/project/atom/split-screen-operation.html&quot;&gt;Atom 使用教程&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;常用快捷键&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;快捷键&lt;/th&gt;
&lt;th&gt;效果&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;cmd + comma&lt;/td&gt;
&lt;td&gt;open preferences&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cmd + shift + p&lt;/td&gt;
&lt;td&gt;toggle command palette&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cmd + \&lt;/td&gt;
&lt;td&gt;toggle tree view&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cmd + shift + k&lt;/td&gt;
&lt;td&gt;delete whole line(eclipse:cmd + d,&lt;strong&gt;和markdown-writer热键冲突&lt;/strong&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cmd + shift + d&lt;/td&gt;
&lt;td&gt;duplicate whole line&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
    
    </summary>
    
      <category term="atom" scheme="http://dangxia.github.io/categories/atom/"/>
    
    
  </entry>
  
  <entry>
    <title>use-hexo-renderer-markdown-it</title>
    <link href="http://dangxia.github.io/2016/04/15/hexo/2016-04-15-use-hexo-renderer-markdown-it/"/>
    <id>http://dangxia.github.io/2016/04/15/hexo/2016-04-15-use-hexo-renderer-markdown-it/</id>
    <published>2016-04-15T08:27:00.000Z</published>
    <updated>2016-04-15T14:31:23.988Z</updated>
    
    <content type="html">&lt;p&gt;use &lt;a href=&quot;https://github.com/celsomiranda/hexo-renderer-markdown-it&quot; title=&quot;hexo-renderer-markdown-it&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo-renderer-markdown-it&lt;/a&gt; replace hexo-renderer-marked&lt;/p&gt;
&lt;h3&gt;install&lt;/h3&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm un hexo-renderer-marked --save&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm i hexo-renderer-markdown-it --save&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3&gt;&lt;a href=&quot;https://github.com/celsomiranda/hexo-renderer-markdown-it/wiki/Advanced-Configuration&quot; title=&quot;config&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;config&lt;/a&gt;&lt;/h3&gt;
&lt;figure class=&quot;highlight yaml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;markdown:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  render:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    html:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    xhtmlOut:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    breaks:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    linkify:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    typographer:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    quotes:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;“”‘’&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  plugins:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;    -&lt;/span&gt; markdown-it-abbr&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;    -&lt;/span&gt; markdown-it-footnote&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;    -&lt;/span&gt; markdown-it-ins&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;    -&lt;/span&gt; markdown-it-sub&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;    -&lt;/span&gt; markdown-it-sup&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  anchors:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    level:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    collisionSuffix:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;v&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    permalink:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    permalinkClass:&lt;/span&gt; header-anchor&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    permalinkSymbol:&lt;/span&gt; ¶&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3&gt;notice&lt;/h3&gt;
&lt;p&gt;default &lt;code&gt;breaks&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt; need set to &lt;code&gt;true&lt;/code&gt;&lt;br&gt;
配合atom的markdown-preview &lt;code&gt;break on single line&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;issue:&lt;a href=&quot;http://lnxpgn.github.io/2015/08/01/hexo-markdown-issues/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;read more&lt;/a&gt;&lt;br&gt;
&lt;code&gt;Normally, we insert &amp;quot;&amp;lt;!-- more --&amp;gt;&amp;quot; into a post to display its summary, but don&#39;t work if using hexo-renderer-markdown-it with default configuration, hexo-renderer-markdown-it escapes HTML. To fix this issue by appending&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;use &lt;a href=&quot;https://github.com/celsomiranda/hexo-renderer-markdown-it&quot; title=&quot;hexo-renderer-markdown-it&quot;&gt;hexo-renderer-markdown-it&lt;/a&gt; replace hexo-renderer-marked&lt;/p&gt;
&lt;h3&gt;install&lt;/h3&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm un hexo-renderer-marked --save&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm i hexo-renderer-markdown-it --save&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://dangxia.github.io/categories/hexo/"/>
    
    
  </entry>
  
  <entry>
    <title>use atom edit markdown files</title>
    <link href="http://dangxia.github.io/2016/04/15/atom/use-atom-write-markdown/"/>
    <id>http://dangxia.github.io/2016/04/15/atom/use-atom-write-markdown/</id>
    <published>2016-04-15T07:43:37.000Z</published>
    <updated>2016-04-15T14:31:23.983Z</updated>
    
    <content type="html">&lt;h3&gt;issue&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;markdown-preview (atom default plugin)&lt;br&gt;
issue:&lt;a href=&quot;https://github.com/atom/markdown-preview/issues/348&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;blank line break code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;markdonw-writer&lt;br&gt;
tab only move whole line&lt;/li&gt;
&lt;li&gt;markdown-preview-plus&lt;br&gt;
issue:&lt;a href=&quot;https://github.com/mark-hahn/markdown-scroll-sync/issues/4&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;markdown-scroll-sync don&#39;t work on it&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;plugins&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;markdown-preview-plus&lt;/li&gt;
&lt;li&gt;markdown-writer&lt;/li&gt;
&lt;li&gt;markdown-scroll-sync&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h3&gt;issue&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;markdown-preview (atom default plugin)&lt;br&gt;
issue:&lt;a href=&quot;https://github.com/atom/markdown-preview/issues/348&quot; targe
    
    </summary>
    
      <category term="atom" scheme="http://dangxia.github.io/categories/atom/"/>
    
    
  </entry>
  
  <entry>
    <title>hexo-local-fonts</title>
    <link href="http://dangxia.github.io/2016/04/14/hexo/hexo-local-fonts/"/>
    <id>http://dangxia.github.io/2016/04/14/hexo/hexo-local-fonts/</id>
    <published>2016-04-14T07:43:40.000Z</published>
    <updated>2016-04-15T14:31:23.988Z</updated>
    
    <content type="html">&lt;h3&gt;下载css&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://fonts.useso.com/css?family=Lato:300,400,700,400italic&amp;amp;subset=latin,latin-ext&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;google fonts css&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;修改css 安置在source/fonts/fonts.css&lt;/h3&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* latin-ext */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@&lt;span class=&quot;keyword&quot;&gt;font-face&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;font-family&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;Lato&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;font-style&lt;/span&gt;: normal;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;font-weight&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;300&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;src&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;Lato Light&#39;&lt;/span&gt;), &lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;Lato-Light&#39;&lt;/span&gt;), &lt;span class=&quot;built_in&quot;&gt;url&lt;/span&gt;(/fonts/Lato/dPJ5r9gl3kK6ijoeP1IRsvY6323mHUZFJMgTvxaG2iE.woff2) &lt;span class=&quot;built_in&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;woff2&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;unicode-range&lt;/span&gt;: U+&lt;span class=&quot;number&quot;&gt;0100&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;024&lt;/span&gt;F, U+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;E00-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;EFF, U+&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;A0-&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;AB, U+&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;AD-&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;CF, U+&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;C60-&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;C7F, U+A720-A7FF;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* latin */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@&lt;span class=&quot;keyword&quot;&gt;font-face&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;font-family&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;Lato&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;font-style&lt;/span&gt;: normal;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;font-weight&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;300&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;src&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;Lato Light&#39;&lt;/span&gt;), &lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;Lato-Light&#39;&lt;/span&gt;), &lt;span class=&quot;built_in&quot;&gt;url&lt;/span&gt;(/fonts/Lato/EsvMC5un3kjyUhB9ZEPPwg.woff2) &lt;span class=&quot;built_in&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;woff2&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;unicode-range&lt;/span&gt;: U+&lt;span class=&quot;number&quot;&gt;0000&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;00&lt;/span&gt;FF, U+&lt;span class=&quot;number&quot;&gt;0131&lt;/span&gt;, U+&lt;span class=&quot;number&quot;&gt;0152&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;0153&lt;/span&gt;, U+&lt;span class=&quot;number&quot;&gt;02&lt;/span&gt;C6, U+&lt;span class=&quot;number&quot;&gt;02&lt;/span&gt;DA, U+&lt;span class=&quot;number&quot;&gt;02&lt;/span&gt;DC, U+&lt;span class=&quot;number&quot;&gt;2000&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;206&lt;/span&gt;F, U+&lt;span class=&quot;number&quot;&gt;2074&lt;/span&gt;, U+&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;AC, U+&lt;span class=&quot;number&quot;&gt;2212&lt;/span&gt;, U+&lt;span class=&quot;number&quot;&gt;2215&lt;/span&gt;, U+E0FF, U+EFFD, U+F000;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* latin-ext */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@&lt;span class=&quot;keyword&quot;&gt;font-face&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;font-family&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;Lato&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;font-style&lt;/span&gt;: normal;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;font-weight&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;400&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;src&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;Lato Regular&#39;&lt;/span&gt;), &lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;Lato-Regular&#39;&lt;/span&gt;), &lt;span class=&quot;built_in&quot;&gt;url&lt;/span&gt;(/fonts/Lato/UyBMtLsHKBKXelqf4x7VRQ.woff2) &lt;span class=&quot;built_in&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;woff2&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;unicode-range&lt;/span&gt;: U+&lt;span class=&quot;number&quot;&gt;0100&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;024&lt;/span&gt;F, U+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;E00-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;EFF, U+&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;A0-&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;AB, U+&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;AD-&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;CF, U+&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;C60-&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;C7F, U+A720-A7FF;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* latin */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@&lt;span class=&quot;keyword&quot;&gt;font-face&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;font-family&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;Lato&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;font-style&lt;/span&gt;: normal;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;font-weight&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;400&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;src&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;Lato Regular&#39;&lt;/span&gt;), &lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;Lato-Regular&#39;&lt;/span&gt;), &lt;span class=&quot;built_in&quot;&gt;url&lt;/span&gt;(/fonts/Lato/1YwB1sO8YE1Lyjf12WNiUA.woff2) &lt;span class=&quot;built_in&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;woff2&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;unicode-range&lt;/span&gt;: U+&lt;span class=&quot;number&quot;&gt;0000&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;00&lt;/span&gt;FF, U+&lt;span class=&quot;number&quot;&gt;0131&lt;/span&gt;, U+&lt;span class=&quot;number&quot;&gt;0152&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;0153&lt;/span&gt;, U+&lt;span class=&quot;number&quot;&gt;02&lt;/span&gt;C6, U+&lt;span class=&quot;number&quot;&gt;02&lt;/span&gt;DA, U+&lt;span class=&quot;number&quot;&gt;02&lt;/span&gt;DC, U+&lt;span class=&quot;number&quot;&gt;2000&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;206&lt;/span&gt;F, U+&lt;span class=&quot;number&quot;&gt;2074&lt;/span&gt;, U+&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;AC, U+&lt;span class=&quot;number&quot;&gt;2212&lt;/span&gt;, U+&lt;span class=&quot;number&quot;&gt;2215&lt;/span&gt;, U+E0FF, U+EFFD, U+F000;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* latin-ext */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@&lt;span class=&quot;keyword&quot;&gt;font-face&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;font-family&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;Lato&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;font-style&lt;/span&gt;: normal;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;font-weight&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;700&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;src&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;Lato Bold&#39;&lt;/span&gt;), &lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;Lato-Bold&#39;&lt;/span&gt;), &lt;span class=&quot;built_in&quot;&gt;url&lt;/span&gt;(/fonts/Lato/ObQr5XYcoH0WBoUxiaYK3_Y6323mHUZFJMgTvxaG2iE.woff2) &lt;span class=&quot;built_in&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;woff2&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;unicode-range&lt;/span&gt;: U+&lt;span class=&quot;number&quot;&gt;0100&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;024&lt;/span&gt;F, U+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;E00-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;EFF, U+&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;A0-&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;AB, U+&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;AD-&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;CF, U+&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;C60-&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;C7F, U+A720-A7FF;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* latin */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@&lt;span class=&quot;keyword&quot;&gt;font-face&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;font-family&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;Lato&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;font-style&lt;/span&gt;: normal;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;font-weight&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;700&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;src&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;Lato Bold&#39;&lt;/span&gt;), &lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;Lato-Bold&#39;&lt;/span&gt;), &lt;span class=&quot;built_in&quot;&gt;url&lt;/span&gt;(/fonts/Lato/H2DMvhDLycM56KNuAtbJYA.woff2) &lt;span class=&quot;built_in&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;woff2&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;unicode-range&lt;/span&gt;: U+&lt;span class=&quot;number&quot;&gt;0000&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;00&lt;/span&gt;FF, U+&lt;span class=&quot;number&quot;&gt;0131&lt;/span&gt;, U+&lt;span class=&quot;number&quot;&gt;0152&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;0153&lt;/span&gt;, U+&lt;span class=&quot;number&quot;&gt;02&lt;/span&gt;C6, U+&lt;span class=&quot;number&quot;&gt;02&lt;/span&gt;DA, U+&lt;span class=&quot;number&quot;&gt;02&lt;/span&gt;DC, U+&lt;span class=&quot;number&quot;&gt;2000&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;206&lt;/span&gt;F, U+&lt;span class=&quot;number&quot;&gt;2074&lt;/span&gt;, U+&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;AC, U+&lt;span class=&quot;number&quot;&gt;2212&lt;/span&gt;, U+&lt;span class=&quot;number&quot;&gt;2215&lt;/span&gt;, U+E0FF, U+EFFD, U+F000;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* latin-ext */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@&lt;span class=&quot;keyword&quot;&gt;font-face&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;font-family&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;Lato&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;font-style&lt;/span&gt;: italic;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;font-weight&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;300&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;src&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;Lato Light Italic&#39;&lt;/span&gt;), &lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;Lato-LightItalic&#39;&lt;/span&gt;), &lt;span class=&quot;built_in&quot;&gt;url&lt;/span&gt;(/fonts/Lato/XNVd6tsqi9wmKNvnh5HNEBJtnKITppOI_IvcXXDNrsc.woff2) &lt;span class=&quot;built_in&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;woff2&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;unicode-range&lt;/span&gt;: U+&lt;span class=&quot;number&quot;&gt;0100&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;024&lt;/span&gt;F, U+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;E00-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;EFF, U+&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;A0-&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;AB, U+&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;AD-&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;CF, U+&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;C60-&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;C7F, U+A720-A7FF;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* latin */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@&lt;span class=&quot;keyword&quot;&gt;font-face&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;font-family&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;Lato&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;font-style&lt;/span&gt;: italic;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;font-weight&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;300&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;src&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;Lato Light Italic&#39;&lt;/span&gt;), &lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;Lato-LightItalic&#39;&lt;/span&gt;), &lt;span class=&quot;built_in&quot;&gt;url&lt;/span&gt;(/fonts/Lato/2HG_tEPiQ4Z6795cGfdivFtXRa8TVwTICgirnJhmVJw.woff2) &lt;span class=&quot;built_in&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;woff2&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;unicode-range&lt;/span&gt;: U+&lt;span class=&quot;number&quot;&gt;0000&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;00&lt;/span&gt;FF, U+&lt;span class=&quot;number&quot;&gt;0131&lt;/span&gt;, U+&lt;span class=&quot;number&quot;&gt;0152&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;0153&lt;/span&gt;, U+&lt;span class=&quot;number&quot;&gt;02&lt;/span&gt;C6, U+&lt;span class=&quot;number&quot;&gt;02&lt;/span&gt;DA, U+&lt;span class=&quot;number&quot;&gt;02&lt;/span&gt;DC, U+&lt;span class=&quot;number&quot;&gt;2000&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;206&lt;/span&gt;F, U+&lt;span class=&quot;number&quot;&gt;2074&lt;/span&gt;, U+&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;AC, U+&lt;span class=&quot;number&quot;&gt;2212&lt;/span&gt;, U+&lt;span class=&quot;number&quot;&gt;2215&lt;/span&gt;, U+E0FF, U+EFFD, U+F000;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* latin-ext */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@&lt;span class=&quot;keyword&quot;&gt;font-face&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;font-family&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;Lato&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;font-style&lt;/span&gt;: italic;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;font-weight&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;400&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;src&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;Lato Italic&#39;&lt;/span&gt;), &lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;Lato-Italic&#39;&lt;/span&gt;), &lt;span class=&quot;built_in&quot;&gt;url&lt;/span&gt;(/fonts/Lato/YMOYVM-eg6Qs9YzV9OSqZfesZW2xOQ-xsNqO47m55DA.woff2) &lt;span class=&quot;built_in&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;woff2&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;unicode-range&lt;/span&gt;: U+&lt;span class=&quot;number&quot;&gt;0100&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;024&lt;/span&gt;F, U+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;E00-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;EFF, U+&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;A0-&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;AB, U+&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;AD-&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;CF, U+&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;C60-&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;C7F, U+A720-A7FF;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* latin */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@&lt;span class=&quot;keyword&quot;&gt;font-face&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;font-family&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;Lato&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;font-style&lt;/span&gt;: italic;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;font-weight&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;400&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;src&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;Lato Italic&#39;&lt;/span&gt;), &lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;Lato-Italic&#39;&lt;/span&gt;), &lt;span class=&quot;built_in&quot;&gt;url&lt;/span&gt;(/fonts/Lato/PLygLKRVCQnA5fhu3qk5fQ.woff2) &lt;span class=&quot;built_in&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;woff2&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;unicode-range&lt;/span&gt;: U+&lt;span class=&quot;number&quot;&gt;0000&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;00&lt;/span&gt;FF, U+&lt;span class=&quot;number&quot;&gt;0131&lt;/span&gt;, U+&lt;span class=&quot;number&quot;&gt;0152&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;0153&lt;/span&gt;, U+&lt;span class=&quot;number&quot;&gt;02&lt;/span&gt;C6, U+&lt;span class=&quot;number&quot;&gt;02&lt;/span&gt;DA, U+&lt;span class=&quot;number&quot;&gt;02&lt;/span&gt;DC, U+&lt;span class=&quot;number&quot;&gt;2000&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;206&lt;/span&gt;F, U+&lt;span class=&quot;number&quot;&gt;2074&lt;/span&gt;, U+&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;AC, U+&lt;span class=&quot;number&quot;&gt;2212&lt;/span&gt;, U+&lt;span class=&quot;number&quot;&gt;2215&lt;/span&gt;, U+E0FF, U+EFFD, U+F000;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* latin-ext */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@&lt;span class=&quot;keyword&quot;&gt;font-face&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;font-family&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;Lato&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;font-style&lt;/span&gt;: italic;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;font-weight&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;700&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;src&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;Lato Bold Italic&#39;&lt;/span&gt;), &lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;Lato-BoldItalic&#39;&lt;/span&gt;), &lt;span class=&quot;built_in&quot;&gt;url&lt;/span&gt;(/fonts/Lato/AcvTq8Q0lyKKNxRlL28RnxJtnKITppOI_IvcXXDNrsc.woff2) &lt;span class=&quot;built_in&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;woff2&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;unicode-range&lt;/span&gt;: U+&lt;span class=&quot;number&quot;&gt;0100&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;024&lt;/span&gt;F, U+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;E00-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;EFF, U+&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;A0-&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;AB, U+&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;AD-&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;CF, U+&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;C60-&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;C7F, U+A720-A7FF;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* latin */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@&lt;span class=&quot;keyword&quot;&gt;font-face&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;font-family&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;Lato&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;font-style&lt;/span&gt;: italic;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;font-weight&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;700&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;src&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;Lato Bold Italic&#39;&lt;/span&gt;), &lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;Lato-BoldItalic&#39;&lt;/span&gt;), &lt;span class=&quot;built_in&quot;&gt;url&lt;/span&gt;(/fonts/Lato/HkF_qI1x_noxlxhrhMQYEFtXRa8TVwTICgirnJhmVJw.woff2) &lt;span class=&quot;built_in&quot;&gt;format&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;woff2&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;unicode-range&lt;/span&gt;: U+&lt;span class=&quot;number&quot;&gt;0000&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;00&lt;/span&gt;FF, U+&lt;span class=&quot;number&quot;&gt;0131&lt;/span&gt;, U+&lt;span class=&quot;number&quot;&gt;0152&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;0153&lt;/span&gt;, U+&lt;span class=&quot;number&quot;&gt;02&lt;/span&gt;C6, U+&lt;span class=&quot;number&quot;&gt;02&lt;/span&gt;DA, U+&lt;span class=&quot;number&quot;&gt;02&lt;/span&gt;DC, U+&lt;span class=&quot;number&quot;&gt;2000&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;206&lt;/span&gt;F, U+&lt;span class=&quot;number&quot;&gt;2074&lt;/span&gt;, U+&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;AC, U+&lt;span class=&quot;number&quot;&gt;2212&lt;/span&gt;, U+&lt;span class=&quot;number&quot;&gt;2215&lt;/span&gt;, U+E0FF, U+EFFD, U+F000;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3&gt;下载相应的文件到&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;source/fonts/Lato&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;修改next的external-fonts.swig&lt;/h3&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&amp;#123;&amp;#123; font_host &amp;#125;&amp;#125;/fonts.css?family=&amp;#123;&amp;#123; font_families &amp;#125;&amp;#125;&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/css&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3&gt;refer&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://www.zhihu.com/question/20587762&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.zhihu.com/question/20587762&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3&gt;下载css&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://fonts.useso.com/css?family=Lato:300,400,700,400italic&amp;amp;subset=latin,latin-ext&quot;&gt;google fonts css&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;修改css 安置在source/fonts/fonts.css&lt;/h3&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://dangxia.github.io/categories/hexo/"/>
    
    
  </entry>
  
  <entry>
    <title>AbstractQueuedSynchronizer Source</title>
    <link href="http://dangxia.github.io/2016/03/22/java/AbstractQueuedSynchronizer-Source/"/>
    <id>http://dangxia.github.io/2016/03/22/java/AbstractQueuedSynchronizer-Source/</id>
    <published>2016-03-22T03:18:02.000Z</published>
    <updated>2016-04-15T14:31:23.989Z</updated>
    
    <content type="html">&lt;h3&gt;不添加Node到queue&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;tryAcquire 可以获得锁&lt;/li&gt;
&lt;li&gt;tryAcquireShared 可以获得锁&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;进入queue&lt;/h3&gt;
&lt;p&gt;pred.waitStatus == SIGNAL  ==&amp;gt; park&lt;br&gt;
pred.waitStatus == CANCELED ==&amp;gt; 更新祖先节点,直到祖先节点不为CANCELED的节点&lt;br&gt;
其他 =&amp;gt; 更新祖先节点为SIGNAL , park&lt;/p&gt;
&lt;h3&gt;acquireQueued&lt;/h3&gt;
&lt;p&gt;setHead(node),原先的head被移除&lt;/p&gt;
&lt;h3&gt;waitStatus&lt;/h3&gt;
&lt;p&gt;enq : 0&lt;br&gt;
被下一个enq:更新为SINGAL&lt;br&gt;
被unparkSuccessor:更新为:0&lt;br&gt;
cancelAcquire:当超时或interrept,更新为CANCELLED&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3&gt;不添加Node到queue&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;tryAcquire 可以获得锁&lt;/li&gt;
&lt;li&gt;tryAcquireShared 可以获得锁&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;进入queue&lt;/h3&gt;
&lt;p&gt;pred.waitStatus == SIGNAL  =
    
    </summary>
    
      <category term="java" scheme="http://dangxia.github.io/categories/java/"/>
    
    
      <category term="java" scheme="http://dangxia.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Chapter4：Classes and Objects</title>
    <link href="http://dangxia.github.io/2016/01/24/scala/Classes-and-Objects/"/>
    <id>http://dangxia.github.io/2016/01/24/scala/Classes-and-Objects/</id>
    <published>2016-01-24T07:44:29.000Z</published>
    <updated>2016-04-15T14:31:23.994Z</updated>
    
    <content type="html">&lt;h3&gt;Classes, fields, and methods&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;The way you make members public in Scala is by not explicitly specifyingany access modifier. Put another way, where you’d say “public” in Java,you simply say nothing in Scala. Public is Scala’s default access level.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;Semicolon inference&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;single line&lt;br&gt;
one statement on a single line,semicolon is optional&lt;br&gt;
multiple statement on a single line,semicolone is require&lt;/li&gt;
&lt;li&gt;multiple lines&lt;br&gt;
one statement on multiple lines,most of the time,is treated as one multiple lines statement&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;The rules of semicolon inference&lt;/strong&gt;&lt;br&gt;
The precise rules for statement separation are surprisingly simple for how well they work.&lt;br&gt;
In short, a line ending is treated as a semicolon unless one of the following conditions is true:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;The line in question ends in a word that would not be legal as theend of a statement, such as a period or an infix operator.&lt;/li&gt;
&lt;li&gt;The next line begins with a word that cannot start a statement.&lt;/li&gt;
&lt;li&gt;The line ends while inside parentheses (...) or brackets [...],because these cannot contain multiple statements anyway.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Singleton objects&lt;/h3&gt;
&lt;p&gt;Scala cannot have static members. Instead, Scala has singleton objects.&lt;br&gt;
A singleton object definition looks like a class definition, except instead of the keyword class you use the keyword object.&lt;br&gt;
When a singleton object shares the same name with a class, it is called that class’s companion object. You must define both the class and its companion object in the same source file. The class is called the companion class of the singleton object. A class and its companion object can access each other’s private members.&lt;br&gt;
However, singleton objects extend a superclass and can mix in traits. Given each singleton object is an instance of its superclasses and mixed-in traits, you can invoke its methods via these types, refer to it from variables of these types, and pass it to methods expecting these types.&lt;br&gt;
A singleton object that does not share the same name with a companion class is called a standalone object. You can use standalone objects for many purposes, including collecting related utility methods together, or defining an entry point to a Scala application&lt;/p&gt;
&lt;h3&gt;A Scala application&lt;/h3&gt;
&lt;p&gt;To run a Scala program, you must supply the name of a standalone singleton object with a main method that takes one parameter, an Array[String], and has a result type of Unit.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Scala implicitly imports members of packages java.lang and scala, as well as the members of a singleton object named Predef, into every Scala source file. Predef, which resides in package scala, contains many useful methods. For example, when you say println in a Scala source file, you’re actually invoking println on Predef. (Predef.println turns around and invokes Console.println, which does the real work.) When you say assert, you’re invoking Predef.assert.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Neither ChecksumAccumulator.scala nor Summer.scala are scripts, because they end in a definition. A script, by contrast, must end in a result expression.&lt;br&gt;
**fsc：**This compiles your source files, but there may be a perceptible delay before the compilation finishes. The reason is that every time the compiler starts up, it spends time scanning the contents of jar files and doing other initial work before it even looks at the fresh source files you submit to it. For this reason, the Scala distribution also includes a Scala compiler daemon called fsc (for fast Scala compiler). You use it like this:&lt;/p&gt;
&lt;figure class=&quot;highlight stata&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ fsc ChecksumAccumulator.&lt;span class=&quot;keyword&quot;&gt;scala&lt;/span&gt; Summer.&lt;span class=&quot;keyword&quot;&gt;scala&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3&gt;The Application trait&lt;/h3&gt;
&lt;p&gt;Scala provides a trait, scala.Application, that can save you some finger typing.&lt;br&gt;
To use the trait, you first write “extends Application” after the name of your singleton object. Then instead of writing a main method, you place the code you would have put in the main method directly between the curly braces of the singleton object. That’s it. You can compile and run this application just like any other.&lt;br&gt;
Inheriting from Application is shorter than writing an explicit main method, but it also has some shortcomings. First, you can’t use this trait if you need to access command-line arguments, because the args array isn’t available. For example, because the Summer application uses command-line arguments, it must be written with an explicit main method, as shown in Listing 4.3. Second, because of some restrictions in the JVM threading model, you need an explicit main method if your program is multi-threaded. Finally, some implementations of the JVM do not optimize the initialization code of an object which is executed by the Application trait. So you should inherit from Application only when your program is relatively simple and single-threaded&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3&gt;Classes, fields, and methods&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;The way you make members public in Scala is by not explicitly specifyingany ac
    
    </summary>
    
      <category term="Scala" scheme="http://dangxia.github.io/categories/Scala/"/>
    
    
      <category term="Programming in Scala" scheme="http://dangxia.github.io/tags/Programming-in-Scala/"/>
    
  </entry>
  
  <entry>
    <title>English-Names</title>
    <link href="http://dangxia.github.io/2016/01/16/english/2015/English-Names/"/>
    <id>http://dangxia.github.io/2016/01/16/english/2015/English-Names/</id>
    <published>2016-01-16T01:35:21.000Z</published>
    <updated>2016-04-15T14:31:23.984Z</updated>
    
    <content type="html">&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#v&quot;&gt;Eric /&#39;erɪk/&lt;/a&gt; 埃里克，男子名&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#v&quot;&gt;Raymond /&#39;reɪmənd/&lt;/a&gt; n. 雷蒙德（男子名）&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#v&quot;&gt;Guy /gaɪ/&lt;/a&gt; n. 男人，家伙; vt. 嘲弄，取笑; vi. 逃跑; n. (Guy)人名；(西)吉；(法)居伊；(英)盖伊&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#v&quot;&gt;Steele /sti:l/&lt;/a&gt; n. 斯蒂尔（姓氏）&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#v&quot;&gt;Eric /&#39;erɪk/&lt;/a&gt; 埃里克，男子名&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#v&quot;&gt;Raymond /&#39;reɪmənd/&lt;/a&gt; n. 雷蒙德（男子名）&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#v&quot;&gt;Guy /gaɪ/&lt;/a&gt; 
    
    </summary>
    
      <category term="english" scheme="http://dangxia.github.io/categories/english/"/>
    
    
  </entry>
  
  <entry>
    <title>apache-http-core</title>
    <link href="http://dangxia.github.io/2016/01/02/trivial/apache-http-core/"/>
    <id>http://dangxia.github.io/2016/01/02/trivial/apache-http-core/</id>
    <published>2016-01-02T03:00:06.000Z</published>
    <updated>2016-04-15T14:31:23.997Z</updated>
    
    <content type="html">&lt;ul&gt;
&lt;li&gt;https://hc.apache.org/httpcomponents-core-ga/tutorial/html/&lt;/li&gt;
&lt;li&gt;https://hc.apache.org/httpcomponents-client-ga/tutorial/html/&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;https://hc.apache.org/httpcomponents-core-ga/tutorial/html/&lt;/li&gt;
&lt;li&gt;https://hc.apache.org/httpcomponents-client-ga/tutorial/html/&lt;
    
    </summary>
    
      <category term="trivial" scheme="http://dangxia.github.io/categories/trivial/"/>
    
    
  </entry>
  
  <entry>
    <title>Chapter6：Functional Objects</title>
    <link href="http://dangxia.github.io/2015/12/06/scala/Functional-Objects/"/>
    <id>http://dangxia.github.io/2015/12/06/scala/Functional-Objects/</id>
    <published>2015-12-06T07:44:29.000Z</published>
    <updated>2016-04-15T14:31:23.995Z</updated>
    
    <content type="html">&lt;h3&gt;Constructing a Rational&lt;/h3&gt;
&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Rational&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;n: &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;, d: &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;this line of code is that if a class doesn’t have a body, you don’t need to specify empty curly braces (though you could, of course, if you wanted to).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;primary constructor&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Immutable object trade-offs&lt;/strong&gt;&lt;br&gt;
Immutable objects offer several advantages over mutable objects, and one potential disadvantage. First, immutable objects are often easier to reason about than mutable ones, because they do not have complex state spaces that change over time. Second, you can pass immutable objects around quite freely, whereas you may need to make defensive copies of mutable objects before passing them to other code. Third, there is no way for two threads concurrently accessing an immutable to corrupt its state once it has been properly constructed, because no thread can change the state of an immutable. Fourth, immutable objects make safe hash table keys. If a mutable object is mutated after it is placed into a HashSet, for example, that object may not be found the next time you look into the HashSet.&lt;br&gt;
The main disadvantage of immutable objects is that they sometimes require that a large object graph be copied where otherwise an update could be done in place. In some cases this can be awkward to express and might also cause a performance bottleneck. As a result, it is not uncommon for libraries to provide mutable alternatives to immutable classes. For example, class StringBuilder is a mutable alternative to the immutable String. We’ll give you more information on designing mutable objects in Scala in Chapter 18.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt;&lt;br&gt;
This initial Rational example highlights a difference between Java and Scala. In Java, classes have constructors, which can take parameters, whereas in Scala, classes can take parameters directly. The Scala notation is more concise—class parameters can be used directly in the body of the class; there’s no need to define fields and write assignments that copy constructor parameters into fields. This can yield substantial savings in boilerplate code, especially for small classes.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Rational&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;n: &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;, d: &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	println(&lt;span class=&quot;string&quot;&gt;&quot;Created &quot;&lt;/span&gt;+ n +&lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt;+ d)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;The Scala compiler will compile any code you place in the class body, which isn’t part of a field or a method definition, into the primary constructor&lt;/p&gt;
&lt;h3&gt;Reimplementing the toString method&lt;/h3&gt;
&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Rational&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;n: &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;, d: &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;toString&lt;/span&gt; &lt;/span&gt;= n +&lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt;+ d&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;The override modifier in front of a method definition signals that a previous method definition is overridden&lt;/p&gt;
&lt;h3&gt;Checking preconditions&lt;/h3&gt;
&lt;p&gt;A precondition is a constraint on values passed into a method or constructor, a requirement which callers must fulfill&lt;/p&gt;
&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Rational&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;n: &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;, d: &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	require(d != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;toString&lt;/span&gt; &lt;/span&gt;= n +&lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt;+ d&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3&gt;Adding fields&lt;/h3&gt;
&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Rational&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;n: &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;, d: &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123; &lt;span class=&quot;comment&quot;&gt;// This won’t compile&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	require(d != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;toString&lt;/span&gt; &lt;/span&gt;= n +&lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt;+ d&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;add&lt;/span&gt;&lt;/span&gt;(that: &lt;span class=&quot;type&quot;&gt;Rational&lt;/span&gt;): &lt;span class=&quot;type&quot;&gt;Rational&lt;/span&gt; = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Rational&lt;/span&gt;(n * that.d + that.n * d, d * that.d)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Although class parameters n and d are in scope in the code of your add method, you can only access their value on the object on which add was invoked. Thus, when you say n or d in add’s implementation, the compiler is happy to provide you with the values for these class parameters. But it won’t let you say that.n or that.d, because that does not refer to the Rational object on which add was invoked&lt;/p&gt;
&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Rational&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;n: &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;, d: &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	require(d != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; numer: &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt; = n&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; denom: &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt; = d&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;toString&lt;/span&gt; &lt;/span&gt;= numer +&lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt;+ denom&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;add&lt;/span&gt;&lt;/span&gt;(that: &lt;span class=&quot;type&quot;&gt;Rational&lt;/span&gt;): &lt;span class=&quot;type&quot;&gt;Rational&lt;/span&gt; =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Rational&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			numer * that.denom + that.numer * denom,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			denom * that.denom&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3&gt;Self references&lt;/h3&gt;
&lt;p&gt;The keyword &lt;code&gt;this&lt;/code&gt; refers to the object instance on which the currently executing method was invoked, or if used in a constructor, the object instance being constructed&lt;/p&gt;
&lt;h3&gt;Auxiliary constructors&lt;/h3&gt;
&lt;p&gt;Auxiliary constructors in Scala start with def this(...).&lt;/p&gt;
&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Rational&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;n: &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;, d: &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	require(d != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; numer: &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt; = n&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; denom: &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt; = d&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;this&lt;/span&gt;&lt;/span&gt;(n: &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;) = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;(n, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;// auxiliary constructor&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;The primary constructor is thus the single point of entry of a class.&lt;/strong&gt;&lt;br&gt;
In Scala, every auxiliary constructor must invoke another constructor of the same class as its first action. In other words, the first statement in every auxiliary constructor in every Scala class will have the form “this(. . . )”. The invoked constructor is either the primary constructor (as in the Rational example), or another auxiliary constructor that comes textually before the calling constructor. The net effect of this rule is that every constructor invocation in Scala will end up eventually calling the primary constructor of the class.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;&lt;br&gt;
If you’re familiar with Java, you may wonder why Scala’s rules for constructors are a bit more restrictive than Java’s. In Java, a constructor must either invoke another constructor of the same class, or directly invoke a constructor of the superclass, as its first action. In a Scala class, only the primary constructor can invoke a superclass constructor. The increased restriction in Scala is really a design trade-off that needed to be paid in exchange for the greater conciseness and simplicity of Scala’s constructors compared to Java’s.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;Private fields and methods&lt;/h3&gt;
&lt;p&gt;make a field or method private you simply place the private keyword in front of its definition.&lt;/p&gt;
&lt;h3&gt;Defining operators&lt;/h3&gt;
&lt;p&gt;The first step is to replace add by the usual mathematical symbol&lt;/p&gt;
&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Rational&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;n: &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;, d: &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	require(d != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; g = gcd(n.abs, d.abs)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; numer = n / g&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; denom = d / g&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;this&lt;/span&gt;&lt;/span&gt;(n: &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;) = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;(n, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;+&lt;/span&gt; &lt;/span&gt;(that: &lt;span class=&quot;type&quot;&gt;Rational&lt;/span&gt;): &lt;span class=&quot;type&quot;&gt;Rational&lt;/span&gt; =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Rational&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			numer * that.denom + that.numer * denom,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			denom * that.denom&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;*&lt;/span&gt; &lt;/span&gt;(that: &lt;span class=&quot;type&quot;&gt;Rational&lt;/span&gt;): &lt;span class=&quot;type&quot;&gt;Rational&lt;/span&gt; =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Rational&lt;/span&gt;(numer * that.numer, denom * that.denom)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;toString&lt;/span&gt; &lt;/span&gt;= numer +&lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt;+ denom&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;gcd&lt;/span&gt;&lt;/span&gt;(a: &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;, b: &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;): &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt; =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (b == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) a &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; gcd(b, a % b)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3&gt;Identifiers in Scala&lt;/h3&gt;
&lt;h4&gt;alphanumeric identifier&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;An alphanumeric identifier starts with a letter or underscore, which can be followed by further letters, digits, or underscores.&lt;/strong&gt; The ‘$’ character also counts as a letter, however it is reserved for identifiers generated by the Scala compiler. Identifiers in user programs should not contain ‘$’ characters, even though it will compile; if they do this might lead to name clashes with identifiers generated by the Scala compiler&lt;br&gt;
Scala follows Java’s convention of using camel-case identifiers.Although underscores are legal in identifiers, they are not used that often in Scala programs, in part to be consistent with Java,but also because underscores have many other non-identifier uses in Scala code. As a result, &lt;strong&gt;it is best to avoid identifiers like to_string, __init__, or name_.&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;br&gt;
One consequence of using a trailing underscore in an identifier is that if you attempt, for example, to write a declaration like this, “val name_: Int = 1”, you’ll get a compiler error. The compiler will think you are trying to declare a val named “name_:”. To get this to compile, you would need to insert an extra space before the colon, as in: “val name_ : Int = 1”.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;One way in which Scala’s conventions depart from Java’s involves constant names.&lt;/strong&gt;&lt;br&gt;
In Java, the convention is to give constants names that are all upper case, with underscores separating the words, such as MAX_VALUE or PI.&lt;br&gt;
In Scala, the convention is merely that the first character should be upper case.&lt;br&gt;
Thus, constants named in the Java style, such as X_OFFSET, will work as Scala constants, but the Scala convention is to use camel case for constants, such as XOffset.&lt;/p&gt;
&lt;h4&gt;operator identifier&lt;/h4&gt;
&lt;p&gt;An operator identifier consists of one or more operator characters. Operator characters are printable ASCII characters such as &lt;code&gt;+, :, ?, ~ or #&lt;/code&gt;. Here are some examples of operator identifiers:&lt;code&gt;+ ++ ::: &amp;lt;?&amp;gt; :-&amp;gt;&lt;/code&gt;&lt;br&gt;
The Scala compiler will internally “mangle” operator identifiers to turn them into legal Java identifiers with embedded $ characters. For instance, the identifier :-&amp;gt; would be represented internally as $colon$minus$greater.&lt;br&gt;
&lt;strong&gt;Because operator identifiers in Scala can become arbitrarily long, there is a small difference between Java and Scala&lt;/strong&gt;&lt;br&gt;
In Java, the input x&amp;lt;-y would be parsed as four lexical symbols, so it would be equivalent to x &amp;lt; - y. In Scala, &amp;lt;- would be parsed as a single identifier, giving x &amp;lt;- y. If you want the first interpretation, you need to separate the &amp;lt; and the - characters by a space.&lt;/p&gt;
&lt;h4&gt;mixed identifier&lt;/h4&gt;
&lt;p&gt;A mixed identifier consists of an alphanumeric identifier, which is followed by an underscore and an operator identifier. For example, unary_+ used as a method name defines a unary + operator. Or, myvar_= used as method name defines an assignment operator.&lt;/p&gt;
&lt;h4&gt;literal identifier&lt;/h4&gt;
&lt;p&gt;A literal identifier is an arbitrary string enclosed in back ticks (&lt;code&gt;. . .&lt;/code&gt;). Some examples of literal identifiers are:&lt;br&gt;
		`x` `&lt;clinit&gt;` `yield`&lt;br&gt;
The idea is that you can put any string that’s accepted by the runtime as an identifier between back ticks. The result is always a Scala identifier. This works even if the name contained in the back ticks would be a Scala reserved word.&lt;/clinit&gt;&lt;/p&gt;
&lt;h3&gt;Method overloading&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;br&gt;
Scala’s process of overloaded method resolution is very similar to Java’s. In every case, the chosen overloaded version is the one that best matches the static types of the arguments. Sometimes there is no unique best matching version; in that case the compiler will give you an “ambiguous reference” error.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;Implicit conversions&lt;/h3&gt;
&lt;p&gt;You can create an implicit conversion that automatically converts integers to rational numbers when needed. Try adding this line in the interpreter:&lt;/p&gt;
&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;implicit&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;intToRational&lt;/span&gt;&lt;/span&gt;(x: &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;) = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Rational&lt;/span&gt;(x)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Note that for an implicit conversion to work, it needs to be in scope. If you place the implicit method definition inside class Rational, it won’t be in scope in the interpreter. For now, you’ll need to define it directly in the interpreter.&lt;/p&gt;
&lt;h3&gt;A word of caution&lt;/h3&gt;
&lt;p&gt;As this chapter has demonstrated, creating methods with operator names and defining implicit conversions can help you design libraries for which client code is concise and easy to understand. Scala gives you a great deal of power to design such easy-to-use libraries, but please bear in mind that with power comes responsibility&lt;br&gt;
If used unartfully, both operator methods and implicit conversions can give rise to client code that is hard to read and understand. Because implicit conversions are applied implicitly by the compiler, not explicitly written down in the source code, it can be non-obvious to client programmers what implicit conversions are being applied. And although operator methods will usually make client code more concise, they will only make it more readable to the extent client programmers will be able to recognize and remember the meaning of each operator.&lt;br&gt;
The goal you should keep in mind as you design libraries is not merely enabling concise client code, but readable, understandable client code. Conciseness will often be a big part of that readability, but you can take conciseness too far. By designing libraries that enable tastefully concise and at the same time understandable client code, you can help those client programmers work productively.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3&gt;Constructing a Rational&lt;/h3&gt;
&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;sp
    
    </summary>
    
      <category term="Scala" scheme="http://dangxia.github.io/categories/Scala/"/>
    
    
      <category term="Programming in Scala" scheme="http://dangxia.github.io/tags/Programming-in-Scala/"/>
    
  </entry>
  
  <entry>
    <title>Chapter5：Basic Types and Operations</title>
    <link href="http://dangxia.github.io/2015/12/06/scala/Basic-Types-and-Operations/"/>
    <id>http://dangxia.github.io/2015/12/06/scala/Basic-Types-and-Operations/</id>
    <published>2015-12-06T03:21:24.000Z</published>
    <updated>2016-04-15T14:31:23.994Z</updated>
    
    <content type="html">&lt;h3&gt;Literals&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;String literals&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Scala includes a special syntaxfor raw strings. You start and end a &lt;code&gt;raw string&lt;/code&gt; with three double quotationmarks in a row (&amp;quot;&amp;quot;&amp;quot;). The interior of a raw string may contain any characterswhatsoever, including newlines, quotation marks, and special characters, except of course three quotes in a row.&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;figcaption&gt;&lt;span&gt;example&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;println(&quot;&quot;&quot;Welcome to Ultamix 3000.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           Type &quot;HELP&quot; for help.&quot;&quot;&quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//Welcome to Ultamix 3000.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//         Type &quot;HELP&quot; for help.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;figcaption&gt;&lt;span&gt;put a pipe character (|) at the front of each line,then call stripMargin on strings,to escape the leading spaces&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;println(&quot;&quot;&quot;|Welcome to Ultamix 3000.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|Type &quot;HELP&quot; for help.&quot;&quot;&quot;.stripMargin)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//Welcome to Ultamix 3000.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//Type &quot;HELP&quot; for help.&quot;&quot;&quot;.stripMargin&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;Symbol literals&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A symbol literal is written &#39;ident, where ident can be any alphanumericidentifier. Such literals are mapped to instances of the predefined classscala.Symbol. Specifically, the literal &#39;cymbal will be expanded by thecompiler to a factory method invocation: Symbol(&amp;quot;cymbal&amp;quot;).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt;&lt;br&gt;
Another thing that’s noteworthy is that symbols are interned(限定的). If you write the same symbol literal twice, both expressions will refer to the exact same Symbol object.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;Operators and methods&lt;/h3&gt;
&lt;p&gt;Scala provides a rich set of operators for its basic types. As mentioned inprevious chapters, these operators are actually just a nice syntax for ordinary method calls.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Any method can be an operator&lt;/strong&gt;&lt;br&gt;
In Scala operators are not special language syntax: any method can be an operator. What makes a method an operator is how you use it. When you write “s.indexOf(&#39;o&#39;)”, indexOf is not an operator. But when you write “s indexOf &#39;o&#39;”, indexOf is an operator, because you’re using it in operator notation.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;infix operator&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//single argument&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;s indexOf &#39;o&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//multiple arguments&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;s indexOf (&#39;o&#39;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;prefix operator&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Scala will transform the expression -2.0 into the method invocation “(2.0).unary_-”&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;:The only identifiers that can be used as prefix operators are&lt;code&gt;+, -, !, and ~&lt;/code&gt;.Thus, if you define a method named unary_!, you could invoke that methodon a value or variable of the appropriate type using prefix operator notation,such as !p. But if you define a method named unary_*, you wouldn’t be ableto use prefix operator notation, because * isn’t one of the four identifiers thatcan be used as prefix operators.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;postfix operator&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Postfix operators are methods that take no arguments, when they are invoked without a dot or parentheses.&lt;/p&gt;
&lt;h3&gt;Relational and logical operations&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You may be wondering how short-circuiting can work given operators are just methods. Normally, all arguments are evaluated before entering a method, so how can a method avoid evaluating its second argument? The answer is that all Scala methods have a facility for delaying the evaluation of their arguments, or even declining to evaluate them at all. The facility is called by-name parameters and is discussed in Section 9.5.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;Object equality&lt;/h3&gt;
&lt;p&gt;If you want to compare two objects for equality, you can use either ==, or its inverse !=.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;**How Scala’s == differs from Java’s **&lt;br&gt;
In Java,you can use == to compare both primitive and reference types. On primitive types, Java’s == compares value equality, as in Scala. On reference types, however, Java’s == compares reference equality, which means the two variables point to the same object on the JVM’s heap. Scala provides a facility for comparing reference equality, as well, under the name eq. However, eq and its opposite, ne, only apply to objects that directly map to Java objects. The full details about eq and ne are given in Sections 11.1 and 11.2. Also, see Chapter 30 on how to write a good equals method.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;Operator precedence and associativity&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Operator precedence&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;(all other special characters)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;* / %&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;+ -&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;:&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;= !&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;lt; &amp;gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;amp; ˆ |&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;(all letters)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;(all assignment operators)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;Scala decides precedence based on the first character of the methods used in operator notation&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;a +++ b *** c &lt;span class=&quot;comment&quot;&gt;//a +++ (b *** c)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;The one exception to the precedence rule&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The one exception to the precedence rule, alluded to above, concerns &lt;strong&gt;assignment operators&lt;/strong&gt;, which end in an equals character. If an operator ends in an equals character (=), and the operator is not one of the comparison operators &amp;lt;=, &amp;gt;=, ==, or !=, then the precedence of the operator is the same as that of &lt;strong&gt;simple assignment (=)&lt;/strong&gt;.&lt;/p&gt;
&lt;figure class=&quot;highlight scala&quot;&gt;&lt;figcaption&gt;&lt;span&gt;because *= is classified as an assignment operator whose precedence is lower than +, even though the operator’s first character is *, which would suggest a precedence higher than +.&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;x *= y + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;//x *= (y + 1)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;associativity&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;No matter what associativity an operator has, however, its operands are always evaluated left to right&lt;br&gt;
If the methods end in ‘:’, they are grouped right to left; otherwise, they are grouped left to right. For example,&lt;code&gt;a ::: b ::: c&lt;/code&gt; is treated as &lt;code&gt;a ::: (b ::: c)&lt;/code&gt;. But &lt;code&gt;a * b * c&lt;/code&gt;, by contrast, is treated as &lt;code&gt;(a * b) * c&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;Rich wrappers&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Some rich operations&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Code&lt;/th&gt;
&lt;th&gt;Result&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0 max 5&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0 min 5&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-2.7 abs&lt;/td&gt;
&lt;td&gt;2.7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-2.7 round&lt;/td&gt;
&lt;td&gt;-3L&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.5 isInfinity&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;(1.0 / 0) isInfinity&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4 to 6&lt;/td&gt;
&lt;td&gt;Range(4, 5, 6)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;quot;bob&amp;quot; capitalize&lt;/td&gt;
&lt;td&gt;&amp;quot;Bob&amp;quot;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;quot;robert&amp;quot; drop 2&lt;/td&gt;
&lt;td&gt;&amp;quot;bert&amp;quot;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Rich wrapper classes&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Basic&lt;/th&gt;
&lt;th&gt;type Rich wrapper&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Byte&lt;/td&gt;
&lt;td&gt;scala.runtime.RichByte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Short&lt;/td&gt;
&lt;td&gt;scala.runtime.RichShort&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Int&lt;/td&gt;
&lt;td&gt;scala.runtime.RichInt&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Char&lt;/td&gt;
&lt;td&gt;scala.runtime.RichChar&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Float&lt;/td&gt;
&lt;td&gt;scala.runtime.RichFloat&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Double&lt;/td&gt;
&lt;td&gt;scala.runtime.RichDouble&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Boolean&lt;/td&gt;
&lt;td&gt;scala.runtime.RichBoolean&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;String&lt;/td&gt;
&lt;td&gt;scala.collection.immutable.StringOps&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</content>
    
    <summary type="html">
    
      &lt;h3&gt;Literals&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;String literals&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Scala includes a special syntaxfor raw strings. You start and end a &lt;code&gt;raw strin
    
    </summary>
    
      <category term="Scala" scheme="http://dangxia.github.io/categories/Scala/"/>
    
    
      <category term="Programming in Scala" scheme="http://dangxia.github.io/tags/Programming-in-Scala/"/>
    
  </entry>
  
  <entry>
    <title>MasterBatchCoordinator源码</title>
    <link href="http://dangxia.github.io/2015/12/02/jstorm/JStormMasterBatchCoordinator-Code/"/>
    <id>http://dangxia.github.io/2015/12/02/jstorm/JStormMasterBatchCoordinator-Code/</id>
    <published>2015-12-02T06:46:49.000Z</published>
    <updated>2016-04-15T14:31:23.990Z</updated>
    
    <content type="html">&lt;h4&gt;CoordinatorState Zk&lt;/h4&gt;
&lt;figure class=&quot;highlight haml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$&amp;#123;spout_id&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  -&lt;span class=&quot;ruby&quot;&gt;coordinator&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;    -&lt;span class=&quot;ruby&quot;&gt;currtx 当前txid&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;    -&lt;span class=&quot;ruby&quot;&gt;currattempts txid =&amp;gt; attempt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;  -&lt;span class=&quot;ruby&quot;&gt;meta&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;    -&lt;span class=&quot;ruby&quot;&gt;txid1 存储的metaData&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;    -&lt;span class=&quot;ruby&quot;&gt;txid2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;  -&lt;span class=&quot;ruby&quot;&gt;user&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;figcaption&gt;&lt;span&gt;AttemptStatus&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;enum&lt;/span&gt; AttemptStatus &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  PROCESSING, PROCESSED, COMMITTING&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//multi spout state relate to zk&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; List&amp;lt;TransactionalState&amp;gt; _states = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ArrayList();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//active Tx txid =&amp;gt; &amp;#123;status,attempt&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//processing--[first ack]--&amp;gt;processed--[second ack]--&amp;gt;committing--[third ack]--&amp;gt;&amp;#123;removed,_currTransaction++&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//any status --[fail ack]--&amp;gt;&amp;#123;remove all larger or equals tx&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TreeMap&amp;lt;Long, TransactionStatus&amp;gt; _activeTx = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; TreeMap&amp;lt;Long, TransactionStatus&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TreeMap&amp;lt;Long, Integer&amp;gt; _attemptIds;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; SpoutOutputCollector _collector;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Long _currTransaction;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; _maxTransactionActive;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;List&amp;lt;ITridentSpout.BatchCoordinator&amp;gt; _coordinators = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ArrayList();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;List&amp;lt;String&amp;gt; _managedSpoutIds;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;List&amp;lt;ITridentSpout&amp;gt; _spouts;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;WindowedTimeThrottler _throttler;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h4&gt;CoordinatorState Zk&lt;/h4&gt;
&lt;figure class=&quot;highlight haml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$&amp;#123;spout_id&amp;#125;&lt;/span&gt;
    
    </summary>
    
      <category term="jstorm" scheme="http://dangxia.github.io/categories/jstorm/"/>
    
    
      <category term="jstorm" scheme="http://dangxia.github.io/tags/jstorm/"/>
    
  </entry>
  
  <entry>
    <title>TridentTopology源码</title>
    <link href="http://dangxia.github.io/2015/11/30/jstorm/JStorm-TridentTopology-Code/"/>
    <id>http://dangxia.github.io/2015/11/30/jstorm/JStorm-TridentTopology-Code/</id>
    <published>2015-11-30T06:46:49.000Z</published>
    <updated>2016-04-15T14:31:23.990Z</updated>
    
    <content type="html">&lt;h4&gt;参考：&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;http://www.cnblogs.com/hseagle/p/3756862.html&lt;/li&gt;
&lt;li&gt;http://www.flyne.org/article/216&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;从TridentTopology到基本的Topology有三层，下图给出一个全局的视图。下图引自&lt;a href=&quot;http://www.cnblogs.com/hseagle/p/3490635.html&quot; title=&quot;徽沪一郎&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;徽沪一郎&lt;/a&gt;的blog&lt;br&gt;
&lt;img src=&quot;/img/jstorm/trident-view.png&quot; alt=&quot;&quot; title=&quot;trident-view&quot;&gt;&lt;/p&gt;
&lt;h4&gt;TridentTopology属性&lt;/h4&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//一个simple directed graph&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DefaultDirectedGraph&amp;lt;Node, IndexedEdge&amp;gt; _graph;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//state.node.id=&amp;gt;[self,stateQueryNode]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Map&amp;lt;String, List&amp;lt;Node&amp;gt;&amp;gt; _colocate = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; HashMap();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//生成唯一的stream,state的ID&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UniqueIdGen _gen;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4&gt;Node Type&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Node&lt;/li&gt;
&lt;li&gt;SpoutNode&lt;/li&gt;
&lt;li&gt;ProcessorNode&lt;/li&gt;
&lt;li&gt;PartitionNode&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;enum&lt;/span&gt; SpoutType &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    DRPC, BATCH&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;TridentTopology#newStream&lt;/code&gt; create a BATCH &lt;code&gt;SpoutNode&lt;/code&gt; with &lt;code&gt;ITridentSpout&lt;/code&gt;,若不是&lt;code&gt;ITridentSpout&lt;/code&gt;最终也会被包装成&lt;code&gt;ITridentSpout&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IRichSpout : RichSpoutBatchExecutor&lt;/li&gt;
&lt;li&gt;IBatchSpout : BatchSpoutExecutor&lt;/li&gt;
&lt;li&gt;IPartitionedTridentSpout : PartitionedTridentSpoutExecutor&lt;/li&gt;
&lt;li&gt;IOpaquePartitionedTridentSpout : OpaquePartitionedTridentSpoutExecutor&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;TridentTopology#newDRPCStream&lt;/code&gt; create a DRPC &lt;code&gt;SpoutNode&lt;/code&gt; with &lt;code&gt;DRPCSpout&lt;/code&gt;，没有txid&lt;/p&gt;
&lt;p&gt;&lt;code&gt;TridentTopology#newStaticState&lt;/code&gt; create a &lt;code&gt;Node&lt;/code&gt; with &lt;code&gt;NodeStateInfo&lt;/code&gt;&lt;br&gt;
奇怪，一直以为只会创建&lt;code&gt;Node&lt;/code&gt;的子类？&lt;/p&gt;
&lt;h3&gt;Node name，Stream name，StreamId&lt;/h3&gt;
&lt;p&gt;TridentTopology 直接创建的Node name都为空，相应的Stream的name也为空。&lt;br&gt;
Stream的name可以通过Stream#name(String name)来修改，但与之相依的Node的name不能相应改变。&lt;br&gt;
当在Stream通过operation创建新的Node时，Node的name为创建它的Stream的name。&lt;/p&gt;
&lt;p&gt;Stream operation create new Node,generally,create a new stream id,except operation &lt;code&gt;partition&lt;/code&gt;,new node using it&#39;s parent streamId.&lt;/p&gt;
&lt;h4&gt;build&lt;/h4&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;figcaption&gt;&lt;span&gt;TridentTopology#build&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//其中mergedGroups为spoutGroup,boltGroup&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//spoutNodes 为SpoutNode集合&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//已经省略了，完成drpc的环，以及node合并成group等。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//node =&amp;gt; batchGroupName,ex:bg0,bg1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//可能有多个batchGroup,亲测可以&amp;#123;没有连接的多个拓扑图&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Map&amp;lt;Node, String&amp;gt; batchGroupMap = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; HashMap();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;List&amp;lt;Set&amp;lt;Node&amp;gt;&amp;gt; connectedComponents = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ConnectivityInspector&amp;lt;Node, IndexedEdge&amp;gt;(graph).connectedSets();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; connectedComponents.size(); i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  String groupId = &lt;span class=&quot;string&quot;&gt;&quot;bg&quot;&lt;/span&gt; + i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (Node n : connectedComponents.get(i)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    batchGroupMap.put(n, groupId);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//计算每个Group的parallelism&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Map&amp;lt;Group, Integer&amp;gt; parallelisms = getGroupParallelisms(graph, grouper, mergedGroups);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TridentTopologyBuilder builder = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; TridentTopologyBuilder();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//spoutNode =&amp;gt; spoutId ,ex:spout0,spout1 String为componentId&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Map&amp;lt;Node, String&amp;gt; spoutIds = genSpoutIds(spoutNodes);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//opretionNode =&amp;gt; boltId,ex:b-0,b-1,b-2-kkk String为componentId&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Map&amp;lt;Group, String&amp;gt; boltIds = genBoltIds(mergedGroups);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (SpoutNode sn : spoutNodes) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Integer parallelism = parallelisms.get(grouper.nodeGroup(sn));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (sn.type == SpoutNode.SpoutType.DRPC) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//spout0,s0,IRichSpout,parallelism,bg0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    builder.setBatchPerTupleSpout(spoutIds.get(sn), sn.streamId, (IRichSpout) sn.spout, parallelism,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        batchGroupMap.get(sn));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ITridentSpout s;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (sn.spout &lt;span class=&quot;keyword&quot;&gt;instanceof&lt;/span&gt; IBatchSpout) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      s = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; BatchSpoutExecutor((IBatchSpout) sn.spout);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (sn.spout &lt;span class=&quot;keyword&quot;&gt;instanceof&lt;/span&gt; ITridentSpout) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      s = (ITridentSpout) sn.spout;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; RuntimeException(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;string&quot;&gt;&quot;Regular rich spouts not supported yet... try wrapping in a RichSpoutBatchExecutor&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// &lt;span class=&quot;doctag&quot;&gt;TODO:&lt;/span&gt; handle regular rich spout without batches (need&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// lots of updates to support this throughout)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//spout0,s0,txStateId,ITridentSpout,parallelism,bg0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    builder.setSpout(spoutIds.get(sn), sn.streamId, sn.txId, s, parallelism, batchGroupMap.get(sn));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (Group g : mergedGroups) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!isSpoutGroup(g)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Integer p = parallelisms.get(g);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//stream to batchGroup &amp;#123;s0=&amp;gt;bg0&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Map&amp;lt;String, String&amp;gt; streamToGroup = getOutputStreamBatchGroups(g, batchGroupMap);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//b-0,SubtopologyBolt(graph, g.nodes, batchGroupMap),parallelism,&amp;#123;bg0&amp;#125;,&amp;#123;s0=&amp;gt;bg0&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    BoltDeclarer d = builder.setBolt(boltIds.get(g), &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SubtopologyBolt(graph, g.nodes, batchGroupMap), p,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        committerBatches(g, batchGroupMap), streamToGroup);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Collection&amp;lt;PartitionNode&amp;gt; inputs = uniquedSubscriptions(externalGroupInputs(g));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (PartitionNode n : inputs) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      Node parent = TridentUtils.getParent(graph, n);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      String componentId;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (parent &lt;span class=&quot;keyword&quot;&gt;instanceof&lt;/span&gt; SpoutNode) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        componentId = spoutIds.get(parent);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        componentId = boltIds.get(grouper.nodeGroup(parent));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      d.grouping(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; GlobalStreamId(componentId, n.streamId), n.thriftGrouping);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; builder.buildTopology();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;figcaption&gt;&lt;span&gt;TridentTopologyBuilder#setBatchPerTupleSpout&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; SpoutDeclarer &lt;span class=&quot;title&quot;&gt;setBatchPerTupleSpout&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String id, String streamName, IRichSpout spout, Integer parallelism,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      String batchGroup)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Map&amp;lt;String, String&amp;gt; batchGroups = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; HashMap();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  batchGroups.put(streamName, batchGroup);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//_batchIds.put(new GlobalStreamId(id, streamName), batchGroup);GlobalStreamId=&amp;gt;batchGroup&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  markBatchGroups(id, batchGroups);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  SpoutComponent c = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SpoutComponent(spout, streamName, parallelism, batchGroup);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//componentId =&amp;gt; SpoutComponent&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  _batchPerTupleSpouts.put(id, c);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SpoutDeclarerImpl(c);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;figcaption&gt;&lt;span&gt;TridentTopologyBuilder#setSpout&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; SpoutDeclarer &lt;span class=&quot;title&quot;&gt;setSpout&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String id, String streamName, String txStateId, ITridentSpout spout,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      Integer parallelism, String batchGroup)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Map&amp;lt;String, String&amp;gt; batchGroups = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; HashMap();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  batchGroups.put(streamName, batchGroup);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  markBatchGroups(id, batchGroups);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  TransactionalSpoutComponent c = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; TransactionalSpoutComponent(spout, streamName, parallelism, txStateId,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      batchGroup);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  _spouts.put(id, c);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SpoutDeclarerImpl(c);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h4&gt;参考：&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;http://www.cnblogs.com/hseagle/p/3756862.html&lt;/li&gt;
&lt;li&gt;http://www.flyne.org/article/216&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;从TridentTopology
    
    </summary>
    
      <category term="jstorm" scheme="http://dangxia.github.io/categories/jstorm/"/>
    
    
      <category term="jstorm" scheme="http://dangxia.github.io/tags/jstorm/"/>
    
  </entry>
  
  <entry>
    <title>TopologyBuilder源码</title>
    <link href="http://dangxia.github.io/2015/11/30/jstorm/JStorm-TopologyBuilder-Code/"/>
    <id>http://dangxia.github.io/2015/11/30/jstorm/JStorm-TopologyBuilder-Code/</id>
    <published>2015-11-30T06:46:49.000Z</published>
    <updated>2016-04-15T14:31:23.990Z</updated>
    
    <content type="html">&lt;h4&gt;TopologyBuilder功能:&lt;/h4&gt;
&lt;p&gt;编织&lt;code&gt;ISpout，IBolt&lt;/code&gt;的拓扑图，并生成StormTopology实例，以便thrift使用.&lt;/p&gt;
&lt;h4&gt;用户编程的接口:IBolt，ISpout，IStateSpout&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;IRichBolt，IBasicBolt，IRichSpout，IRichStateSpout&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;IBasicBolt&lt;/code&gt;没有继承&lt;code&gt;IBolt&lt;/code&gt;，在编织拓扑结构时，使用&lt;code&gt;BasicBoltExecutor&lt;/code&gt;包装成&lt;code&gt;IRichBolt&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; BoltDeclarer &lt;span class=&quot;title&quot;&gt;setBolt&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String id, IBasicBolt bolt, Number parallelism_hint)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; setBolt(id, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; BasicBoltExecutor(bolt), parallelism_hint);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;IRichStateSpout&lt;/code&gt;暂时没有实现&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setStateSpout&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String id, IRichStateSpout stateSpout, Number parallelism_hint)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    validateUnusedId(id);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// &lt;span class=&quot;doctag&quot;&gt;TODO:&lt;/span&gt; finish&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h4&gt;编织拓扑图&lt;code&gt;BoltDeclarer，SpoutDeclarer&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;SpoutDeclarer&lt;/code&gt;配置&lt;code&gt;IRichSpout&lt;/code&gt;&lt;br&gt;
&lt;code&gt;BoltDeclarer&lt;/code&gt;配置&lt;code&gt;IRichBolt&lt;/code&gt;并，通过grouping,配置&lt;code&gt;ComponentCommon&lt;/code&gt;的&lt;code&gt;inputs&lt;/code&gt;等。&lt;/p&gt;
&lt;h4&gt;&lt;code&gt;TopologyBuilder&lt;/code&gt;与&lt;code&gt;IComponent&lt;/code&gt;&lt;/h4&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * Common methods for all possible components in a topology. This interface is used when defining topologies using the Java API.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;IComponent&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Serializable&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * Declare the output schema for all the streams of this topology.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &lt;span class=&quot;doctag&quot;&gt;@param&lt;/span&gt; declarer this is used to declare output stream ids, output fields, and whether or not each output stream is a direct stream&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;declareOutputFields&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(OutputFieldsDeclarer declarer)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * Declare configuration specific to this component. Only a subset of the &quot;topology.*&quot; configs can be overridden. The component configuration can be further&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * overridden when constructing the topology using &amp;#123;&lt;span class=&quot;doctag&quot;&gt;@link&lt;/span&gt; TopologyBuilder&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;Map&amp;lt;String, Object&amp;gt; &lt;span class=&quot;title&quot;&gt;getComponentConfiguration&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;TopologyBuilder#initCommon，调用ComponentConfiguration到ComponentCommon的json_conf中&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;figcaption&gt;&lt;span&gt;TopologyBuilder#initCommon&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;initCommon&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String id, IComponent component, Number parallelism)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ComponentCommon common = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ComponentCommon();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    common.set_inputs(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; HashMap&amp;lt;GlobalStreamId, Grouping&amp;gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (parallelism != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        common.set_parallelism_hint(parallelism.intValue());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        common.set_parallelism_hint(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Map conf = component.getComponentConfiguration();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (conf != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        common.set_json_conf(JSONValue.toJSONString(conf));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _commons.put(id, common);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;TopologyBuilder#getComponentCommon，调用getFieldsDeclaration到ComponentCommon的streams中&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;figcaption&gt;&lt;span&gt;TopologyBuilder#getComponentCommon&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; ComponentCommon &lt;span class=&quot;title&quot;&gt;getComponentCommon&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String id, IComponent component)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ComponentCommon ret = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ComponentCommon(_commons.get(id));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    OutputFieldsGetter getter = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; OutputFieldsGetter();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    component.declareOutputFields(getter);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ret.set_streams(getter.getFieldsDeclaration());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ret;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4&gt;重点关注&lt;code&gt;ComponentCommon&lt;/code&gt;&lt;/h4&gt;
&lt;figure class=&quot;highlight thrift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ComponentCommon&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;required&lt;/span&gt; map&amp;lt;GlobalStreamId, Grouping&amp;gt; inputs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;required&lt;/span&gt; map&amp;lt;&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt;, StreamInfo&amp;gt; streams; &lt;span class=&quot;comment&quot;&gt;//key is stream id&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;optional&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;i32&lt;/span&gt; parallelism_hint; &lt;span class=&quot;comment&quot;&gt;//how many threads across the cluster should be dedicated to this component&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// component specific configuration respects:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// topology.de&lt;span class=&quot;doctag&quot;&gt;bug:&lt;/span&gt; false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// topology.max.task.parallelism: null // can replace isDistributed with this&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// topology.max.spout.pending: null&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// topology.kryo.register // this is the only additive one&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// component specific configuration&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;optional&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt; json_conf;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;IComponent&lt;/code&gt;是通过主动push的方式，这就涉及到问题push给谁？&lt;br&gt;
从&lt;code&gt;ComponentCommon&lt;/code&gt;定义来看，它只声明了生成的stream的相关信息。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;figcaption&gt;&lt;span&gt;Task#makeSendTargets&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; TaskSendTargets &lt;span class=&quot;title&quot;&gt;makeSendTargets&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    String component = topologyContext.getThisComponentId();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// get current task&#39;s output&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// &amp;lt;Stream_id,&amp;lt;component, Grouping&amp;gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Map&amp;lt;String, Map&amp;lt;String, MkGrouper&amp;gt;&amp;gt; streamComponentGrouper = Common.outbound_components(topologyContext, workerData);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; TaskSendTargets(stormConf, component, streamComponentGrouper, topologyContext, taskStats);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;Common#outbound_components&lt;/code&gt;从&lt;code&gt;ComponentCommon&lt;/code&gt;声明中的谁消费什么，转变为我push给谁。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;figcaption&gt;&lt;span&gt;Common#outbound_components&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; Map&amp;lt;String, Map&amp;lt;String, MkGrouper&amp;gt;&amp;gt; outbound_components(TopologyContext topology_context, WorkerData workerData) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Map&amp;lt;String, Map&amp;lt;String, MkGrouper&amp;gt;&amp;gt; rr = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; HashMap&amp;lt;String, Map&amp;lt;String, MkGrouper&amp;gt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// &amp;lt;Stream_id,&amp;lt;component,Grouping&amp;gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Map&amp;lt;String, Map&amp;lt;String, Grouping&amp;gt;&amp;gt; output_groupings = topology_context.getThisTargets();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (Entry&amp;lt;String, Map&amp;lt;String, Grouping&amp;gt;&amp;gt; entry : output_groupings.entrySet()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        String stream_id = entry.getKey();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Map&amp;lt;String, Grouping&amp;gt; component_grouping = entry.getValue();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Fields out_fields = topology_context.getThisOutputFields(stream_id);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Map&amp;lt;String, MkGrouper&amp;gt; componentGrouper = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; HashMap&amp;lt;String, MkGrouper&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (Entry&amp;lt;String, Grouping&amp;gt; cg : component_grouping.entrySet()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            String component = cg.getKey();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Grouping tgrouping = cg.getValue();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            List&amp;lt;Integer&amp;gt; outTasks = topology_context.getComponentTasks(component);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// ATTENTION: If topology set one component parallelism as 0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// so we don&#39;t need send tuple to it&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (outTasks.size() &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                MkGrouper grouper = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MkGrouper(topology_context, out_fields, tgrouping, outTasks, stream_id, workerData);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                componentGrouper.put(component, grouper);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            LOG.info(&lt;span class=&quot;string&quot;&gt;&quot;outbound_components, outTasks=&quot;&lt;/span&gt; + outTasks + &lt;span class=&quot;string&quot;&gt;&quot; for task-&quot;&lt;/span&gt; + topology_context.getThisTaskId());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (componentGrouper.size() &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            rr.put(stream_id, componentGrouper);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; rr;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4&gt;thrift&lt;/h4&gt;
&lt;figure class=&quot;highlight thrift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;union JavaObjectArg &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;i32&lt;/span&gt; int_arg;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;i64&lt;/span&gt; long_arg;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt; string_arg;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;bool&lt;/span&gt; bool_arg;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;binary&lt;/span&gt; binary_arg;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;double&lt;/span&gt; double_arg;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;JavaObject&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;required&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt; full_class_name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;required&lt;/span&gt; list&amp;lt;JavaObjectArg&amp;gt; args_list;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;NullStruct&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;GlobalStreamId&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;required&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt; componentId;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;required&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt; streamId;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  #Going to need to add an &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;enum&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;for&lt;/span&gt; the stream type (NORMAL or FAILURE)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;union Grouping &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;: list&amp;lt;&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt;&amp;gt; fields; &lt;span class=&quot;comment&quot;&gt;//empty list means global grouping&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;: NullStruct shuffle; &lt;span class=&quot;comment&quot;&gt;// tuple is sent to random task&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;: NullStruct all; &lt;span class=&quot;comment&quot;&gt;// tuple is sent to every task&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;: NullStruct none; &lt;span class=&quot;comment&quot;&gt;// tuple is sent to a single task (storm&#39;s choice) -&amp;gt; allows storm to optimize the topology by bundling tasks into a single process&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;: NullStruct direct; &lt;span class=&quot;comment&quot;&gt;// this bolt expects the source bolt to send tuples directly to it&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;: JavaObject custom_object;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;binary&lt;/span&gt; custom_serialized;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;: NullStruct local_or_shuffle; &lt;span class=&quot;comment&quot;&gt;// prefer sending to tasks in the same worker process, otherwise shuffle&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;: NullStruct localFirst; &lt;span class=&quot;comment&quot;&gt;//  local worker shuffle &amp;gt; local node shuffle &amp;gt; other node shuffle&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;StreamInfo&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;required&lt;/span&gt; list&amp;lt;&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt;&amp;gt; output_fields;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;required&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;bool&lt;/span&gt; direct;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ShellComponent&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// should change this to 1: required list&amp;lt;string&amp;gt; execution_command;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt; execution_command;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt; script;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;union ComponentObject &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;binary&lt;/span&gt; serialized_java;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;: ShellComponent shell;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;: JavaObject java_object;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ComponentCommon&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;required&lt;/span&gt; map&amp;lt;GlobalStreamId, Grouping&amp;gt; inputs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;required&lt;/span&gt; map&amp;lt;&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt;, StreamInfo&amp;gt; streams; &lt;span class=&quot;comment&quot;&gt;//key is stream id&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;optional&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;i32&lt;/span&gt; parallelism_hint; &lt;span class=&quot;comment&quot;&gt;//how many threads across the cluster should be dedicated to this component&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// component specific configuration respects:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// topology.de&lt;span class=&quot;doctag&quot;&gt;bug:&lt;/span&gt; false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// topology.max.task.parallelism: null // can replace isDistributed with this&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// topology.max.spout.pending: null&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// topology.kryo.register // this is the only additive one&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// component specific configuration&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;optional&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt; json_conf;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;SpoutSpec&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;required&lt;/span&gt; ComponentObject spout_object;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;required&lt;/span&gt; ComponentCommon common;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// can force a spout to be non-distributed by overriding the component configuration&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// and setting TOPOLOGY_MAX_TASK_PARALLELISM to 1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Bolt&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;required&lt;/span&gt; ComponentObject bolt_object;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;required&lt;/span&gt; ComponentCommon common;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// not implemented yet&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// this will eventually be the basis for subscription implementation in storm&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;StateSpoutSpec&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;required&lt;/span&gt; ComponentObject state_spout_object;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;required&lt;/span&gt; ComponentCommon common;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;StormTopology&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//ids must be unique across maps&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// #workers to use is in conf&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;required&lt;/span&gt; map&amp;lt;&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt;, SpoutSpec&amp;gt; spouts;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;required&lt;/span&gt; map&amp;lt;&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt;, Bolt&amp;gt; bolts;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;required&lt;/span&gt; map&amp;lt;&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt;, StateSpoutSpec&amp;gt; state_spouts;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h4&gt;TopologyBuilder功能:&lt;/h4&gt;
&lt;p&gt;编织&lt;code&gt;ISpout，IBolt&lt;/code&gt;的拓扑图，并生成StormTopology实例，以便thrift使用.&lt;/p&gt;
&lt;h4&gt;用户编程的接口:IBolt，ISpout，IStateSpout&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;IRichBolt，IBasicBolt，IRichSpout，IRichStateSpout&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;IBasicBolt&lt;/code&gt;没有继承&lt;code&gt;IBolt&lt;/code&gt;，在编织拓扑结构时，使用&lt;code&gt;BasicBoltExecutor&lt;/code&gt;包装成&lt;code&gt;IRichBolt&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; BoltDeclarer &lt;span class=&quot;title&quot;&gt;setBolt&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String id, IBasicBolt bolt, Number parallelism_hint)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; setBolt(id, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; BasicBoltExecutor(bolt), parallelism_hint);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;IRichStateSpout&lt;/code&gt;暂时没有实现&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setStateSpout&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String id, IRichStateSpout stateSpout, Number parallelism_hint)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    validateUnusedId(id);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// &lt;span class=&quot;doctag&quot;&gt;TODO:&lt;/span&gt; finish&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="jstorm" scheme="http://dangxia.github.io/categories/jstorm/"/>
    
    
      <category term="jstorm" scheme="http://dangxia.github.io/tags/jstorm/"/>
    
  </entry>
  
  <entry>
    <title>NimbusData源码</title>
    <link href="http://dangxia.github.io/2015/11/25/jstorm/NimbusData-Code/"/>
    <id>http://dangxia.github.io/2015/11/25/jstorm/NimbusData-Code/</id>
    <published>2015-11-25T06:46:49.000Z</published>
    <updated>2016-04-15T14:31:23.990Z</updated>
    
    <content type="html">&lt;h3&gt;属性&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;downloaders,uploaders&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// TODO two kind of value:Channel/BufferFileInputStream&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; TimeCacheMap&amp;lt;Object, Object&amp;gt; downloaders;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; TimeCacheMap&amp;lt;Object, Object&amp;gt; uploaders;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* During upload/download with the master, how long an upload or download connection is idle before nimbus considers it dead and drops the connection.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String NIMBUS_FILE_COPY_EXPIRATION_SECS = &lt;span class=&quot;string&quot;&gt;&quot;nimbus.file.copy.expiration.secs&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;submittedCount&lt;/li&gt;
&lt;li&gt;stormClusterState ==&amp;gt; com.alibaba.jstorm.cluster.StormClusterState&lt;/li&gt;
&lt;li&gt;statusTransition&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;StormClusterState&lt;/h3&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;disconnect&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;remove_storm&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String topology_id)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;try_remove_storm&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String topology_id)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; List&amp;lt;String&amp;gt; &lt;span class=&quot;title&quot;&gt;assignments&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(RunnableCallback callback)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Assignment &lt;span class=&quot;title&quot;&gt;assignment_info&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String topology_id, RunnableCallback callback)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;set_assignment&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String topology_id, Assignment info)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; AssignmentBak &lt;span class=&quot;title&quot;&gt;assignment_bak&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String topologyName)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;backup_assignment&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String topology_id, AssignmentBak info)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; List&amp;lt;String&amp;gt; &lt;span class=&quot;title&quot;&gt;active_storms&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; StormBase &lt;span class=&quot;title&quot;&gt;storm_base&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String topology_id, RunnableCallback callback)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;activate_storm&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String topology_id, StormBase storm_base)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;update_storm&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String topology_id, StormStatus new_elems)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;set_storm_monitor&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String topologyId, &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; isEnable)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;remove_storm_base&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String topology_id)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; List&amp;lt;String&amp;gt; &lt;span class=&quot;title&quot;&gt;task_storms&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Set&amp;lt;Integer&amp;gt; &lt;span class=&quot;title&quot;&gt;task_ids&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String topology_id)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Set&amp;lt;Integer&amp;gt; &lt;span class=&quot;title&quot;&gt;task_ids_by_componentId&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String topologyId, String componentId)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;set_task&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String topologyId, Map&amp;lt;Integer, TaskInfo&amp;gt; taskInfoMap)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;add_task&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String topology_id, Map&amp;lt;Integer, TaskInfo&amp;gt; taskInfoMap)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;remove_task&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String topologyId, Set&amp;lt;Integer&amp;gt; taskIds)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Map&amp;lt;Integer, TaskInfo&amp;gt; &lt;span class=&quot;title&quot;&gt;task_all_info&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String topology_id)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; List&amp;lt;String&amp;gt; &lt;span class=&quot;title&quot;&gt;heartbeat_storms&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;topology_heartbeat&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String topology_id, TopologyTaskHbInfo info)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; TopologyTaskHbInfo &lt;span class=&quot;title&quot;&gt;topology_heartbeat&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String topologyId)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;teardown_heartbeats&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String topology_id)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; List&amp;lt;String&amp;gt; &lt;span class=&quot;title&quot;&gt;task_error_storms&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; List&amp;lt;String&amp;gt; &lt;span class=&quot;title&quot;&gt;task_error_ids&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String topologyId)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;report_task_error&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String topology_id, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; task_id, Throwable error)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;report_task_error&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String topology_id, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; task_id, String error, String tag)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Map&amp;lt;Integer, String&amp;gt; &lt;span class=&quot;title&quot;&gt;topo_lastErr_time&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String topologyId)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;remove_lastErr_time&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String topologyId)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; List&amp;lt;TaskError&amp;gt; &lt;span class=&quot;title&quot;&gt;task_errors&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String topology_id, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; task_id)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;remove_task_error&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String topologyId, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; taskId)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; List&amp;lt;String&amp;gt; &lt;span class=&quot;title&quot;&gt;task_error_time&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String topologyId, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; taskId)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;task_error_info&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String topologyId, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; taskId, &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; timeStamp)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;teardown_task_errors&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String topology_id)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; List&amp;lt;String&amp;gt; &lt;span class=&quot;title&quot;&gt;supervisors&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(RunnableCallback callback)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; SupervisorInfo &lt;span class=&quot;title&quot;&gt;supervisor_info&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String supervisor_id)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;supervisor_heartbeat&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String supervisor_id, SupervisorInfo info)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;try_to_be_leader&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String path, String host, RunnableCallback callback)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;get_leader_host&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;leader_existed&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; List&amp;lt;String&amp;gt; &lt;span class=&quot;title&quot;&gt;get_nimbus_slaves&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;update_nimbus_slave&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String host, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; time)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;get_nimbus_slave_time&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String host)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;unregister_nimbus_host&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String host)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;update_nimbus_detail&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String hostPort, Map map)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Map &lt;span class=&quot;title&quot;&gt;get_nimbus_detail&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String hostPort, &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; watch)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;unregister_nimbus_detail&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String hostPort)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;set_topology_metric&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String topologyId, Object metric)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Object &lt;span class=&quot;title&quot;&gt;get_topology_metric&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String topologyId)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; List&amp;lt;String&amp;gt; &lt;span class=&quot;title&quot;&gt;get_metrics&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; List&amp;lt;String&amp;gt; &lt;span class=&quot;title&quot;&gt;list_dirs&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String path, &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; watch)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt;  Exception&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; List&amp;lt;String&amp;gt; &lt;span class=&quot;title&quot;&gt;backpressureInfos&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;set_backpressure_info&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String topologyId, Map&amp;lt;String, SourceBackpressureInfo&amp;gt; sourceToBackpressureInfo)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Map&amp;lt;String, SourceBackpressureInfo&amp;gt; &lt;span class=&quot;title&quot;&gt;get_backpressure_info&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String topologyId)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;teardown_backpressure&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String topologyId)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h3&gt;属性&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;downloaders,uploaders&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;sp
    
    </summary>
    
      <category term="jstorm" scheme="http://dangxia.github.io/categories/jstorm/"/>
    
    
      <category term="jstorm" scheme="http://dangxia.github.io/tags/jstorm/"/>
    
  </entry>
  
  <entry>
    <title>JStormCache源码</title>
    <link href="http://dangxia.github.io/2015/11/25/jstorm/JStormCache-Code/"/>
    <id>http://dangxia.github.io/2015/11/25/jstorm/JStormCache-Code/</id>
    <published>2015-11-25T06:46:49.000Z</published>
    <updated>2016-04-15T14:31:23.990Z</updated>
    
    <content type="html">&lt;h3&gt;Interface&lt;/h3&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Map&amp;lt;Object, Object&amp;gt; conf)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;cleanup&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;Object &lt;span class=&quot;title&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String key)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getBatch&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Map&amp;lt;String, Object&amp;gt; map)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String key)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;removeBatch&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Collection&amp;lt;String&amp;gt; keys)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String key, Object value, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; timeoutSecond)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String key, Object value)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;putBatch&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Map&amp;lt;String, Object&amp;gt; map)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;putBatch&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Map&amp;lt;String, Object&amp;gt; map, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; timeoutSeconds)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3&gt;JStormCache的实现&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;com.alibaba.jstorm.cache.TimeoutMemCache&lt;/li&gt;
&lt;li&gt;com.alibaba.jstorm.cache.RocksDBCache&lt;/li&gt;
&lt;li&gt;com.alibaba.jstorm.cache.RocksTTLDBCache&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3&gt;TimeoutMemCache&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;TreeMap&amp;lt;Integer, TimeCacheMap&amp;lt;String, Object&amp;gt;&amp;gt; cacheWindows&lt;/code&gt;维持了多个timeout的TimeCacheMap:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;default.cache.timeout default:60&lt;/li&gt;
&lt;li&gt;cache.timeout.list  default:null&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String key, Object value, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; timeoutSecond)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Entry&amp;lt;Integer, TimeCacheMap&amp;lt;String, Object&amp;gt;&amp;gt; ceilingEntry = cacheWindows.ceilingEntry(timeoutSecond);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (ceilingEntry == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        put(key, value);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        remove(key);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ceilingEntry.getValue().put(key, value);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String key, Object value)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    remove(key);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    TimeCacheMap&amp;lt;String, Object&amp;gt; bestWindow = cacheWindows.get(defaultTimeout);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bestWindow.put(key, value);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3&gt;RocksDBCache&lt;/h3&gt;
&lt;p&gt;使用RocksDB实现的一个key=&amp;gt;value持久化的DB.data_dir = ${storm.local.dir}/nimbus/rocksdb/&lt;/p&gt;
&lt;h3&gt;RocksTTLDBCache&lt;/h3&gt;
&lt;p&gt;RocksDBCache的TTL实现,TreeMap&amp;lt;Integer, ColumnFamilyHandle&amp;gt; windowHandlers维持多个timeout的ColumnFamilyHandle&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;infinite lifetime &lt;code&gt;RocksDB.DEFAULT_COLUMN_FAMILY&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;cache.timeout.list  default:null&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; Entry&amp;lt;Integer, ColumnFamilyHandle&amp;gt; &lt;span class=&quot;title&quot;&gt;getHandler&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; timeoutSecond)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ColumnFamilyHandle cfHandler = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Entry&amp;lt;Integer, ColumnFamilyHandle&amp;gt; ceilingEntry = windowHandlers.ceilingEntry(timeoutSecond);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (ceilingEntry != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ceilingEntry;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; windowHandlers.firstEntry();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String key, Object value, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; timeoutSecond)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// TODO Auto-generated method stub&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    put(key, value, getHandler(timeoutSecond));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String key, Object value)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    put(key, value, windowHandlers.firstEntry());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3&gt;NimbusCache&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;memCache 内存cache&lt;/li&gt;
&lt;li&gt;dbCache DB cache&lt;br&gt;
若dbCache为内存cache，memCache=dbCache;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public String getNimbusCacheClass(Map conf) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    boolean isLinux = OSInfo.isLinux();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    boolean isMac = OSInfo.isMac();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    boolean isLocal = StormConfig.local_mode(conf);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (isLocal == true) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return TIMEOUT_MEM_CACHE_CLASS;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (isLinux == false &amp;amp;&amp;amp; isMac == false) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return TIMEOUT_MEM_CACHE_CLASS;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    String nimbusCacheClass = ConfigExtension.getNimbusCacheClass(conf);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (StringUtils.isBlank(nimbusCacheClass) == false) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return nimbusCacheClass;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return ROCKS_DB_CACHE_CLASS;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;### JStormMetricCache&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;只有一个`JStormCache cache`与NimbusCache结构类似。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;配置:&lt;br&gt;
## Two type cache&lt;br&gt;
## &amp;quot;com.alibaba.jstorm.cache.TimeoutMemCache&amp;quot; is suitable for small cluster&lt;br&gt;
## &amp;quot;com.alibaba.jstorm.cache.&lt;s&gt;TimeoutMemCache&lt;/s&gt;RocksDBCache&amp;quot; can only run under linux/mac, it is suitable for huge cluster&lt;br&gt;
## if it is null, it will detected by environment&lt;br&gt;
nimbus.cache.class: null&lt;br&gt;
## if this is true, nimbus db cache will be reset when start nimbus&lt;br&gt;
nimbus.cache.reset: true&lt;br&gt;
cache.timeout.list: null&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3&gt;Interface&lt;/h3&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Map&amp;lt;Object, Object&amp;gt; conf)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;cleanup&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;Object &lt;span class=&quot;title&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String key)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getBatch&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Map&amp;lt;String, Object&amp;gt; map)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String key)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;removeBatch&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Collection&amp;lt;String&amp;gt; keys)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String key, Object value, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; timeoutSecond)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String key, Object value)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;putBatch&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Map&amp;lt;String, Object&amp;gt; map)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;putBatch&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Map&amp;lt;String, Object&amp;gt; map, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; timeoutSeconds)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3&gt;JStormCache的实现&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;com.alibaba.jstorm.cache.TimeoutMemCache&lt;/li&gt;
&lt;li&gt;com.alibaba.jstorm.cache.RocksDBCache&lt;/li&gt;
&lt;li&gt;com.alibaba.jstorm.cache.RocksTTLDBCache&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="jstorm" scheme="http://dangxia.github.io/categories/jstorm/"/>
    
    
      <category term="jstorm" scheme="http://dangxia.github.io/tags/jstorm/"/>
    
  </entry>
  
  <entry>
    <title>links</title>
    <link href="http://dangxia.github.io/2015/11/25/trivial/links/"/>
    <id>http://dangxia.github.io/2015/11/25/trivial/links/</id>
    <published>2015-11-25T03:44:02.000Z</published>
    <updated>2016-04-15T14:31:23.997Z</updated>
    
    <content type="html">&lt;h4&gt;2015-11-25&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;http://stackoverflow.com/questions/7676022/html5-flexible-box-model-height-calculation/15388247#15388247&lt;/li&gt;
&lt;li&gt;https://commons.apache.org/proper/commons-exec/&lt;/li&gt;
&lt;li&gt;http://mathworld.wolfram.com/DirectedGraph.html&lt;/li&gt;
&lt;li&gt;http://zh.wordow.com/english/dictionary/?t=bidirected&lt;/li&gt;
&lt;li&gt;https://zh.wikipedia.org/wiki/%E5%AE%8C%E5%85%A8%E5%9C%96&lt;/li&gt;
&lt;li&gt;http://mathworld.wolfram.com/Indegree.html&lt;/li&gt;
&lt;li&gt;https://backlogtool.com/git-guide/tw/stepup/stepup7_4.html&lt;/li&gt;
&lt;li&gt;http://www.cnblogs.com/fxjwind/p/3182351.html&lt;/li&gt;
&lt;li&gt;http://ifeve.com/disruptor/&lt;/li&gt;
&lt;li&gt;http://www.yworks.com/&lt;/li&gt;
&lt;li&gt;http://www.cnblogs.com/xishuai/p/iddd-cqrs-and-eda.html&lt;/li&gt;
&lt;li&gt;http://www.umlchina.com/book/softmeth.htm&lt;/li&gt;
&lt;li&gt;http://www.cnblogs.com/hseagle/p/3756862.html&lt;/li&gt;
&lt;li&gt;http://www.flyne.org/article/216&lt;/li&gt;
&lt;li&gt;http://www.cnblogs.com/hseagle/p/3756862.html&lt;/li&gt;
&lt;li&gt;http://www.sqlparty.com/mapreduce%E5%BA%94%E7%94%A8%E4%B8%ADcombinefileinputformat%E5%8E%9F%E7%90%86%E4%B8%8E%E7%94%A8%E6%B3%95/&lt;/li&gt;
&lt;li&gt;http://segmentfault.com/a/1190000002680804&lt;/li&gt;
&lt;li&gt;http://blog.csdn.net/dizzthxl/article/details/8498833&lt;/li&gt;
&lt;li&gt;http://www.cnblogs.com/basecn/p/4288456.html&lt;/li&gt;
&lt;li&gt;http://blog.jpush.cn/redis-twemproxy-benchmark/&lt;/li&gt;
&lt;li&gt;http://technology.inmobi.com/blog/real-time-stream-processing-at-inmobi-part-1&lt;/li&gt;
&lt;li&gt;http://www.michael-noll.com/blog/2013/06/21/understanding-storm-internal-message-buffers/&lt;/li&gt;
&lt;li&gt;https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet&lt;/li&gt;
&lt;li&gt;http://www.unjeep.com/hexomarkdownbiaoge/&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h4&gt;2015-11-25&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;http://stackoverflow.com/questions/7676022/html5-flexible-box-model-height-calculation/15388247#15388247&lt;/li&gt;
&lt;
    
    </summary>
    
      <category term="trivial" scheme="http://dangxia.github.io/categories/trivial/"/>
    
    
  </entry>
  
  <entry>
    <title>JStorm Local Dir</title>
    <link href="http://dangxia.github.io/2015/11/25/jstorm/JStorm-Local-Dir/"/>
    <id>http://dangxia.github.io/2015/11/25/jstorm/JStorm-Local-Dir/</id>
    <published>2015-11-25T03:24:40.000Z</published>
    <updated>2016-04-15T14:31:23.989Z</updated>
    
    <content type="html">&lt;h3&gt;storm.local.dir&lt;/h3&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  * A directory on the local filesystem used by Storm for any local filesystem usage it needs. The directory must exist and the Storm daemons must have&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  * permission to read/write from this location.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String STORM_LOCAL_DIR = &lt;span class=&quot;string&quot;&gt;&quot;storm.local.dir&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;nimbus [nimbus local dir]
&lt;ul&gt;
&lt;li&gt;pids
&lt;ul&gt;
&lt;li&gt;{$nimbus_pid}&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;rocksdb NimbusCache的data目录&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;metrics
&lt;ul&gt;
&lt;li&gt;rocksdb JStormMetricCache的data目录&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h3&gt;storm.local.dir&lt;/h3&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;
    
    </summary>
    
      <category term="jstorm" scheme="http://dangxia.github.io/categories/jstorm/"/>
    
    
      <category term="jstorm" scheme="http://dangxia.github.io/tags/jstorm/"/>
    
  </entry>
  
  <entry>
    <title>Get the JVM Pid</title>
    <link href="http://dangxia.github.io/2015/11/25/java/Get-the-JVM-Pid/"/>
    <id>http://dangxia.github.io/2015/11/25/java/Get-the-JVM-Pid/</id>
    <published>2015-11-25T03:18:02.000Z</published>
    <updated>2016-04-15T14:31:23.989Z</updated>
    
    <content type="html">&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  * Gets the pid of this JVM, because Java doesn&#39;t provide a real way to do this.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  * &lt;span class=&quot;doctag&quot;&gt;@return&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;process_pid&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    String name = ManagementFactory.getRuntimeMXBean().getName();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    String[] split = name.split(&lt;span class=&quot;string&quot;&gt;&quot;@&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (split.length != &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; RuntimeException(&lt;span class=&quot;string&quot;&gt;&quot;Got unexpected process name: &quot;&lt;/span&gt; + name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; split[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  
    
    </summary>
    
      <category term="java" scheme="http://dangxia.github.io/categories/java/"/>
    
    
      <category term="java" scheme="http://dangxia.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>English-Words-20151123</title>
    <link href="http://dangxia.github.io/2015/11/23/english/2015/English-Words-20151123/"/>
    <id>http://dangxia.github.io/2015/11/23/english/2015/English-Words-20151123/</id>
    <published>2015-11-23T09:46:01.000Z</published>
    <updated>2016-04-15T14:31:23.984Z</updated>
    
    <content type="html">&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#v&quot;&gt;notation /nəʊ&#39;teɪʃ(ə)n/&lt;/a&gt; n. 符号；乐谱；注释；记号法&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#v&quot;&gt;infix /ɪn&#39;fɪks/&lt;/a&gt; vt. 把…印入；把…插进 n. [计] 中缀；插入词&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#v&quot;&gt;graduation /grædʒʊ&#39;eɪʃ(ə)n/&lt;/a&gt; n. 毕业；毕业典礼；刻度，分度；分等级&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#v&quot;&gt;congratulation /kəngrætjʊ&#39;leɪʃ(ə)n/&lt;/a&gt; n. 祝贺；贺辞&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#v&quot;&gt;soccer /&#39;sɒkə/&lt;/a&gt; n. 英式足球，足球&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#v&quot;&gt;score /skɔː/&lt;/a&gt; 分数；二十；配乐；刻痕&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#v&quot;&gt;translate /træns&#39;leɪt/&lt;/a&gt; vt. 翻译；转化；解释；转变为；调动&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#v&quot;&gt;transform /træns&#39;fɔːm/&lt;/a&gt; vt. 改变，使…变形；转换&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#v&quot;&gt;liberty /&#39;lɪbətɪ/&lt;/a&gt; 自由；许可；冒失&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#v&quot;&gt;literal /&#39;lɪt(ə)r(ə)l/&lt;/a&gt; adj. 文字的；逐字的；无夸张的&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#v&quot;&gt;literate /&#39;lɪt(ə)rət/&lt;/a&gt; adj. 受过教育的；精通文学的&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#v&quot;&gt;quiet /&#39;kwaɪət/&lt;/a&gt; adj. 安静的；安定的；不动的；温顺的&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#v&quot;&gt;quite /kwaɪt/&lt;/a&gt; adv. 很；相当；完全&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#v&quot;&gt;nimbus /&#39;nɪmbəs/&lt;/a&gt; n. （人和物产生的）灵气；光轮；[气象] 雨云；光辉灿烂的气氛&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#v&quot;&gt;supervisor /&#39;suːpəvaɪzə/&lt;/a&gt; n. 监督人，[管理] 管理人；检查员&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#v&quot;&gt;export /ˈekspɔːt/&lt;/a&gt; n. 输出，出口；出口商品&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#v&quot;&gt;expert /&#39;ekspɜːt/&lt;/a&gt; adj. 熟练的；内行的；老练的&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#v&quot;&gt;progress /&#39;prəʊgres/&lt;/a&gt; n. 进步，发展；前进&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#v&quot;&gt;process /&#39;prəʊses/&lt;/a&gt; vt. 处理；加工 n. 过程，进行；方法，步骤；作用；程序；推移&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#v&quot;&gt;possession /pə&#39;zeʃ(ə)n/&lt;/a&gt; n. 拥有；财产；领地；自制；着迷&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#v&quot;&gt;poison /&#39;pɒɪz(ə)n/&lt;/a&gt; vt. 污染；使中毒，放毒于；败坏；阻碍 vi. 放毒，下毒 n. 毒药，毒物；酒；有毒害的事物；[助剂] 抑制剂&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#v&quot;&gt;prison /&#39;prɪz(ə)n/&lt;/a&gt; n. 监狱；监禁；拘留所&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#v&quot;&gt;expect /ɪk&#39;spekt/&lt;/a&gt; vt. 期望；指望；认为；预料&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#v&quot;&gt;except /ɪk&#39;sept/&lt;/a&gt; vt. 不计；把…除外&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#v&quot;&gt;extensibility /ɪk,stɛnsə&#39;bɪləti/&lt;/a&gt; n. 展开性；可延长性&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#v&quot;&gt;vertex /&#39;vɜːteks/&lt;/a&gt; n. 顶点；[昆] 头顶；[天] 天顶&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#v&quot;&gt;disruptor /dɪsˈrʌptə/&lt;/a&gt; n. 破坏者，分裂者&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#v&quot;&gt;variants /&#39;veərɪənt/&lt;/a&gt; n. [计] 变体；变异型（variant的复数）&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#v&quot;&gt;interior /ɪn&#39;tɪɜːrɪə/&lt;/a&gt; n. 内部；本质 adj. 内部的；国内的；本质的&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#v&quot;&gt;emphasis /&#39;emfəsɪs/&lt;/a&gt; n. 重点；强调；加强语气&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#v&quot;&gt;rational /&#39;ræʃ(ə)n(ə)l/&lt;/a&gt; adj. 合理的；理性的 n. 有理数&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#v&quot;&gt;ratio /&#39;reɪʃɪəʊ/&lt;/a&gt; n. 比率，比例&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#v&quot;&gt;numerator /&#39;njuːməreɪtə/&lt;/a&gt; n. 分子；计算者；计算器&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#v&quot;&gt;denominator /dɪ&#39;nɒmɪneɪtə/&lt;/a&gt; n. [数] 分母；命名者；共同特征或共同性质；平均水平或标准&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#v&quot;&gt;trade-off /&#39;treidɔf,-ɔ:f/&lt;/a&gt; n. 交换，交易；权衡；协定&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#v&quot;&gt;potential /pəˈtenʃl/&lt;/a&gt; n. 潜能；可能性；[电] 电势 adj. 潜在的；可能的；势的&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#v&quot;&gt;notation /nəʊ&#39;teɪʃ(ə)n/&lt;/a&gt; n. 符号；乐谱；注释；记号法&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#v&quot;&gt;infix /ɪn&#39;fɪks/&lt;/a&gt; vt. 把…印入；把…插进 n. [计] 中缀；插入词&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#v&quot;&gt;graduation /grædʒʊ&#39;eɪʃ(ə)n/&lt;/a&gt; n. 毕业；毕业典礼；刻度，分度；分等级&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#v&quot;&gt;congratulation /kəngrætjʊ&#39;leɪʃ(ə)n/&lt;/a&gt; n. 祝贺；贺辞&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#v&quot;&gt;soccer /&#39;sɒkə/&lt;/a&gt; n. 英式足球，足球&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#v&quot;&gt;score /skɔː/&lt;/a&gt; 分数；二十；配乐；刻痕&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#v&quot;&gt;translate /træns&#39;leɪt/&lt;/a&gt; vt. 翻译；转化；解释；转变为；调动&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#v&quot;&gt;transform /træns&#39;fɔːm/&lt;/a&gt; vt. 改变，使…变形；转换&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="english" scheme="http://dangxia.github.io/categories/english/"/>
    
    
  </entry>
  
</feed>
